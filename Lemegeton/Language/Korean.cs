using Lemegeton.Core;

namespace Lemegeton.Language
{

    internal class Korean : Core.Language
    {

        public override bool IsDefault => false;
        public override string LanguageName => "Korean";
        public override bool FontDownloadNecessary => false;
        public override string FontDownload => null;
        public override GlyphRangeEnum GlyphRange => GlyphRangeEnum.Undefined;

        public Korean(State st) : base(st)
        {
            #region 1.0.7.5
            //AddEntry("Changelog/1.0.7.5", " Performance improvements\n Fixed TEA Fate Calibration automarkers");
            #endregion
            #region 1.0.7.4
            //AddEntry("Changelog/1.0.7.4", " New troubleshooting feature to help with problems\n Adjustments to TEA automarkers");
            //AddEntry("Status/Troubleshooting", "Troubleshooting");
            //AddEntry("Troubleshooting/Title", "Lemegeton Troubleshooting");
            //AddEntry("Troubleshooting/Intro", "If you have encountered a problem with Lemegeton and something is not working as it should, please follow these instructions to collect some information and report the issue. This is most valuable when done within 30 minutes of the problem occurring, as details of the issue is still stored within memory.");
            //AddEntry("Troubleshooting/Step1", "Press this button to generate a zip archive that contains your dalamud.log, your Lemegeton configuration, and some Lemegeton internal information from the last 30 minutes. This information will help greatly when trying to sort out the issue.");
            //AddEntry("Troubleshooting/Step1Button", "Generate package");
            //AddEntry("Troubleshooting/Step1Working", "Generating package...");
            //AddEntry("Troubleshooting/Step1Done", "Your package has been generated and can be found at:");
            //AddEntry("Troubleshooting/Step1Error", "An error occurred while trying to generate your package.");
            //AddEntry("Troubleshooting/CopyToClipboard", "Copy filename to clipboard");
            //AddEntry("Troubleshooting/Step2", "To use that package, make note of the filename as you'll need it soon, and join the Lemegeton Discord server by hitting the Discord button below, and follow the instructions pinned in channel #lemmy_questions.");
            //AddEntry("Troubleshooting/Outro", "Your reports and logs help locate and fix issues rapidly - thank you for helping out!");
            #endregion
            #region 1.0.6.9
            //AddEntry("Changelog/1.0.6.9", " 7.3 fixes");
            #endregion
            #region 1.0.6.8
            //AddEntry("Changelog/1.0.6.8", " Dalamud API 13");
            #endregion
            #region 1.0.6.7
            //AddEntry("Changelog/1.0.6.7", " Quick bugfix");
            #endregion
            #region 1.0.6.6
            //AddEntry("Changelog/1.0.6.6", " Quick bugfix");
            #endregion
            #region 1.0.6.5
            //AddEntry("Changelog/1.0.6.5", " Added automarker for M6s Soul Sugar\n Added indicator for M8s Moonbeam cleaves");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser", "AAC Cruiserweight (7.2)");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/Enabled", "Enabled");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm", "(M6s) Soul Sugar automarker");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Enabled", "Enabled");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set1", "First set");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set2", "Second set");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set3", "Third set");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set4", "Fourth set");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set1/Yan", "Yan");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set1/GimmeCat", "Gimme Cat");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set1/Mu1", "Mu #1");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set1/Mu2", "Mu #2");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set2/MantaW", "Feather Ray (W)");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set2/MantaE", "Feather Ray (E)");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set2/Mu1", "Mu #1");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set2/Mu2", "Mu #2");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set3/Yan", "Yan");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set3/Jabberwock", "Jabberwock");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set3/GimmeCat", "Gimme Cat");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set4/Yan", "Yan");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set4/Jabberwock", "Jabberwock");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set4/GimmeCat", "Gimme Cat");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set4/MantaW", "Feather Ray (W)");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set4/MantaE", "Feather Ray (E)");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set4/Mu1", "Mu #1");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set4/Mu2", "Mu #2");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Test", "Test random assignment");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/DrawMoonbeam", "(M8s) Moonbeam cleave indicator");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/DrawMoonbeam/Enabled", "Enabled");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/DrawMoonbeam/EarlyHighlightColor", "Early warning color");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/DrawMoonbeam/SoonHighlightColor", "Danger warning color");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/DrawMoonbeam/Test", "Test indicator");
            #endregion
            #region 1.0.6.4
            //AddEntry("Changelog/1.0.6.4", " Fixes for new Dalamud");
            #endregion
            #region 1.0.6.3
            //AddEntry("Changelog/1.0.6.3", " Dalamud API 12 + NET 9 update");
            #endregion
            #region 1.0.6.2
            //AddEntry("Changelog/1.0.6.2", " Added automarker for FRU P4 Crystallize Time");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM", "(P4) Crystallize Time automarker");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs/Aero1", "Aero 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs/Aero2", "Aero 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs/RedBlizzard1", "Red Blizzard 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs/RedBlizzard2", "Red Blizzard 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs/Fire", "Dark Eruption (Fire)");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs/BlueBlizzard", "Blue Blizzard");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs/Water", "Dark Water");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs/Earth", "Unholy Darkness (Earth)");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Prio", "Priority configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Test", "Test random assignment");
            #endregion
            #region 1.0.6.1
            //AddEntry("Changelog/1.0.6.1", " Added Crystallize Time indicators\n Added Ryne & Gaia HP difference indicator");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CTIndicator", "(P4) Crystallize Time indicators");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CTIndicator/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CTIndicator/Hourglasses", "Highlight exploding hourglasses");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CTIndicator/Cleanses", "Highlight cleanses");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CTIndicator/Corner", "Highlight knockback corner");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CTIndicator/ExplodingHourglassColor", "Hourglass highlight color");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CTIndicator/Test", "Test display");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DoubleTrouble", "(P4) Usurper & Oracle HP difference indicator");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DoubleTrouble/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DoubleTrouble/Area", "Overlay configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DoubleTrouble/Test", "Test on self and closest enemy");
            #endregion
            #region 1.0.6.0
            //AddEntry("Changelog/1.0.6.0", " Added JP box strategy for FRU P2 Light Rampant automarker (old one is EU/NA)");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Strategy/BoxJP", "Box 4/4 (JP)");
            #endregion
            #region 1.0.5.9
            //AddEntry("Changelog/1.0.5.9", " Some quick fixes");
            #endregion
            #region 1.0.5.8         
            //AddEntry("Changelog/1.0.5.8", " Added automarker for FRU P3 Ultimate Relativity\n Added automarker for FRU P3 Dark Water");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM", "(P3) Dark Water automarker");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs/Water10_1", "Short 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs/Water10_2", "Short 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs/Water29_1", "Mid 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs/Water29_2", "Mid 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs/Water38_1", "Long 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs/Water38_2", "Long 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs/Nothing_1", "Nothing 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs/Nothing_2", "Nothing 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Prio", "Priority configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Test", "Test random assignment");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM", "(P3) Ultimate Relativity automarker");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/Support10", "Support 10");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/Support20", "Support 20");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/Support30_1", "Support 30 #1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/Support30_2", "Support 30 #2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/SupportIce", "Support Ice");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/Dps10_1", "DPS 10 #1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/Dps10_2", "DPS 10 #2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/Dps20", "DPS 20");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/Dps30", "DPS 30");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/DpsIce", "DPS Ice");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Prio", "Priority configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Test", "Test random assignment");
            #endregion
            #region 1.0.5.7
            //AddEntry("Changelog/1.0.5.7", " Additional fixes to FRU P2 Light Rampant\n Added box strategy for FRU P2 Light Rampant automarker");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Strategy/Box", "Box 4/4 (EU/NA)");
            #endregion
            #region 1.0.5.6
            //AddEntry("Changelog/1.0.5.6", " Fixes to FRU P2 Light Rampant");
            #endregion
            #region 1.0.5.5
            //AddEntry("Changelog/1.0.5.5", " Added AB1234 strategy for FRU P2 Light Rampant automarker");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Strategy", "Solver strategy");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Strategy/Generic", "Seal of Orichalcos (Generic)");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Strategy/AB1234", "AB1234");
            #endregion
            #region 1.0.5.4
            //AddEntry("Changelog/1.0.5.4", " Added automarker for FRU P2 Light Rampant\n Added a new 'Clockspots' priority configuration method, available for all AMs");
            //AddEntry("Automarker/PrioType/Clockspots", "Clockspots");
            //AddEntry("Automarker/PrioType/Clockspots/StartingFrom", "Select priority starting point");
            //AddEntry("Automarker/PrioType/Clockspots/Reversed", "Sort counter-clockwise instead of clockwise");
            //AddEntry("Automarker/PrioDirection/N", "N");
            //AddEntry("Automarker/PrioDirection/NE", "NE");
            //AddEntry("Automarker/PrioDirection/NW", "NW");
            //AddEntry("Automarker/PrioDirection/E", "E");
            //AddEntry("Automarker/PrioDirection/W", "W");
            //AddEntry("Automarker/PrioDirection/SE", "SE");
            //AddEntry("Automarker/PrioDirection/SW", "SW");
            //AddEntry("Automarker/PrioDirection/S", "S");
            #endregion
            #region 1.0.5.3
            //AddEntry("Changelog/1.0.5.3", " Fixes to FRU P1 Fall of Faith");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM", "(P2) Light Rampant automarker");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs/TowerN", "Tower ↑");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs/TowerNE", "Tower ↗");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs/TowerSE", "Tower ↘");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs/TowerS", "Tower ↓");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs/TowerSW", "Tower ↙");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs/TowerNW", "Tower ↖");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs/Puddle1", "Puddle 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs/Puddle2", "Puddle 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Prio", "Priority configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Test", "Test random assignment");
            #endregion
            #region 1.0.5.2
            //AddEntry("Changelog/1.0.5.2", " Added automarker for FRU P1 Fall of Faith");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM", "(P1) Fall of Faith automarker");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs", "Marker configuration");            
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs/Tether1", "Tether 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs/Tether2", "Tether 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs/Tether3", "Tether 3");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs/Tether4", "Tether 4");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs/Overflow1", "Overflow 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs/Overflow2", "Overflow 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs/Overflow3", "Overflow 3");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs/Overflow4", "Overflow 4");            
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Prio", "Priority configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Test", "Test random assignment");
            #endregion
            #region 1.0.5.1
            //AddEntry("Changelog/1.0.5.1", " DSR Dragon HP indicator now much more configurable\n additional minor housekeeping");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/DoubleDragons/Area", "Overlay configuration");
            //AddEntry("Overlay/Settings/BackgroundColor", "Background color");
            //AddEntry("Overlay/Settings/Padding", "Padding");
            #endregion
            #region 1.0.5.0            
            //AddEntry("Changelog/1.0.5.0", " minor housekeeping updates");
            #endregion
            #region 1.0.4.9
            //AddEntry("Changelog/1.0.4.9", " fixed automarker issues with blacklisted characters\n Dalamud API11 update");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/DrawSidewiseSpark", "(M4s) Sidewise Spark indicator");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/DrawSidewiseSpark/Enabled", "Enabled");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/DrawSidewiseSpark/HighlightColor", "Sidewise Spark indicator color");
            //AddEntry("Content/Ultimate/UltFuturesRewritten", "Futures Rewritten (Ultimate)");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/Enabled", "Enabled");
            #endregion
            #region 1.0.4.8
            //AddEntry("Changelog/1.0.4.8", " fixed a problem where minions could not be marked\n Radar\\Finder can now handle regular expressions as well\n added missing Kozama'uka S ranks to Radar\\Finder");
            //AddEntry("PatternType/RegularExpressionShort", "Regex");
            #endregion
            #region 1.0.4.7
            //AddEntry("Changelog/1.0.4.7", " Radar/Finder can now point out special FATE targets");
            //AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeFateSpecial", "Include special FATE targets");
            //AddEntry("Content/Miscellaneous/Radar/AlertFinder/FateSpecialColor", "Special FATE target highlight color");
            #endregion
            #region 1.0.4.6
            //AddEntry("Changelog/1.0.4.6", " small fix to M2s Alarm Pheromones angles");
            #endregion
            #region 1.0.4.5
            //AddEntry("Changelog/1.0.4.5", " added indicator for M2s Alarm Pheromones");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/Groupbees", "(M2s) Alarm Pheromones indicator");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/Groupbees/Enabled", "Enabled");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/Groupbees/Test", "Test through the center");
            #endregion
            #region 1.0.4.4
            //AddEntry("Changelog/1.0.4.4", " fixes and better uptime strategy for M4s Electrical Condenser AM");
            #endregion
            #region 1.0.4.3
            //AddEntry("Changelog/1.0.4.3", " added AM for M4s Electrical Condenser");
            //AddEntry("Content/DawntrailRaids", "Dawntrail (7.x)");
            //AddEntry("Content/DawntrailRaids/Enabled", "Enabled");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy", "AAC Light-heavyweight (7.0)");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/Enabled", "Enabled");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM", "(M4s) Electrical Condenser automarker");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Enabled", "Enabled");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs", "Electrical Condenser spreads");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2", "Four Star pairs");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Prio", "Priority configuration");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Test", "Test random assignment");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs/DPS2", "DPS 2 charge");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs/DPS3", "DPS 3 charge");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs/Support2", "Support 2 charge");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs/Support3", "Support 3 charge");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2/Pair1_S", "Short #1");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2/Pair2_S", "Short #2");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2/Pair3_S", "Short #3");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2/Pair4_S", "Short #4");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2/Pair1_L", "Long #1");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2/Pair2_L", "Long #2");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2/Pair3_L", "Long #3");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2/Pair4_L", "Long #4");
            #endregion
            #region 1.0.4.2            
            //AddEntry("Changelog/1.0.4.2", " added all the missing A/B ranks for Dawntrail");
            #endregion
            #region 1.0.4.1
            //AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeHP", "Include HP % on the name tag");
            //AddEntry("Changelog/1.0.4.1", " added an option to show HP % on the name tag of Radar/Finder");
            #endregion
            #region 1.0.4.0
            //AddEntry("MainMenu/Changelog", "Updates");
            //AddEntry("Notifications/Settings/ShortcutScale", "Shortcut icon scale");
            //AddEntry("Changelog/SinceYourLastUpdate", "Updates since your last version");
            //AddEntry("Changelog/Version", "Version");
            //AddEntry("Changelog/Description", "Description");
            //AddEntry("Changelog/1.0.4.0", " added all new Dawntrail hunts (S, A, B ranks) to Radar\n added an option to resize shortcut icon\n added a change log");
            #endregion
            #region 1.0.3.6
            //AddEntry("Job/VPR", "Viper");
            //AddEntry("Job/PCT", "Pictomancer");
            #endregion
            #region 1.0.3.2
            //AddEntry("Timelines/TimelineSelector", "Open timeline selector");
            //AddEntry("Timelines/TimelineSelector/WindowTitle", "Lemegeton timeline selector");
            //AddEntry("Timelines/TimelineSelector/SelectionInfo", "By default, Lemegeton will select the most recently edited timeline file it can find for a specific zone. You can add zone-specific overrides to make it always use the same timeline file. Please note that timeline reactions are generally tied to a specific timeline file.");
            //AddEntry("Timelines/TimelineSelector/ColZoneID", "ID");
            //AddEntry("Timelines/TimelineSelector/ColZoneName", "Zone name");
            //AddEntry("Timelines/TimelineSelector/ColZoneFile", "Timeline file in use");
            //AddEntry("Timelines/TimelineSelector/ChangeTimelineFile", "Change timeline file");
            //AddEntry("Timelines/TimelineSelector/DeleteOverride", "Remove timeline override");
            //AddEntry("Timelines/TimelineSelector/SelTypeAutomatic", "Selected automatically");
            //AddEntry("Timelines/TimelineSelector/SelTypeOverride", "Overridden manually");
            //AddEntry("Timelines/TimelineSelector/SelectTimelineFile", "Select timeline file to use for '{0}'");
            //AddEntry("Timelines/TimelineSelector/SelectTimelineFileUnspecified", "Select timeline file to add");
            //AddEntry("Timelines/TimelineSelector/AddTimelineFile", "Add timeline file");
            #endregion
            #region 1.0.3.1
            //AddEntry("Content/Ultimate/UltDragonsongReprise/DoubleDragons", "(P6) Dragon HP difference indicator");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/DoubleDragons/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/DoubleDragons/Test", "Test on self and closest enemy");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar", "Enemy cast bar");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/Enabled", "Enabled");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/CastColor", "Cast bar color");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/WarningColor", "Cast bar time warning color");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/InterruptColor", "Interrupt highlight color");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/CastbarVisuals", "Cast bar visual configuration");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/CastbarVisuals/WarningThreshold", "Cast time warning threshold in seconds");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/CastbarVisuals/BarWidth", "Cast bar width");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/CastbarVisuals/BarHeight", "Cast bar height");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/CastbarVisuals/FontSize", "Text size");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/CastbarVisuals/BarOffsetWorld", "Cast bar offset in world coordinates");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/CastbarVisuals/BarOffsetScreen", "Cast bar offset in screen coordinates");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/OnlyCurrentTarget", "Draw only for current target");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/OnlyTargettable", "Draw only for targettable entities");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/ShowCastName", "Show ability name on cast bar");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/ShowCastTime", "Show remaining time on cast bar");
            #endregion
            #region 1.0.2.9
            //AddEntry("Content/Criterion/EwCritAloalo/StaticePresentTether", "Statice Present Box tether indicator");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticePresentTether/Enabled", "Enabled");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticePresentTether/TetherColor", "Add tether color");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticePresentTether/Test", "Test random bullets on player");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM", "Pinwheeling Dartboard automarker");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/Enabled", "Enabled");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/Signs", "Marker configuration");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/Signs/Enumeration", "Enumeration");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/Signs/Chain1", "Chain 1");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/Signs/Chain2", "Chain 2");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/Signs/Nothing", "Nothing");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/Prio", "Priority configuration");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/Test", "Test random assignment");
            //AddEntry("Content/Debug/Debugger/EventLogger/LogActorControl", "Log ActorControl messages");
            #endregion
            #region 1.0.2.8
            //AddEntry("MainMenu/Settings/AutomarkerHistorySoftmarker", "(soft marker)");
            //AddEntry("MainMenu/Settings/AutomarkerHistoryRemoved", "(removed)");
            //AddEntry("MainMenu/Settings/AutomarkerHistory", "Marker change history");
            //AddEntry("MainMenu/Settings/AutomarkerHistoryIntro", "The last 100 marker changes will be listed here in chronologically descending order. This includes markers set (or unset) by other players, allowing you to easily see if anyone else has conflicting markers enabled.");
            //AddEntry("Content/Debug/Debugger/EventLogger/MonitorOmen", "Monitor omen changes");
            //AddEntry("Content/Debug/Debugger/EventLogger/MonitorVFX", "Monitor VFX changes");
            #endregion
            #region 1.0.2.7
            //AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM", "Fate Calibration α automarker");
            //AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs/SharedSentence", "Shared Sentence");
            //AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs/Defamation", "Defamation");
            //AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs/Aggravated1", "Aggravated Assault 1");
            //AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs/Aggravated2", "Aggravated Assault 2");
            //AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs/Aggravated3", "Aggravated Assault 3");
            //AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs/Nothing1", "Nothing 1");
            //AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs/Nothing2", "Nothing 2");
            //AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs/Nothing3", "Nothing 3");
            //AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Test", "Test random assignment");
            //AddEntry("Content/Ultimate/UltAlexander/FateBetaAM", "Fate Calibration β automarker");
            //AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs/LightRestraining", "Light Restraining Order");
            //AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs/DarkRestraining", "Dark Restraining Order");
            //AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs/LightHouseArrest", "Light House Arrest");
            //AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs/DarkHouseArrest", "Dark House Arrest");
            //AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs/LightShared", "Light Shared Sentence");
            //AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs/DarkNothing", "Dark nothing");
            //AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs/LightBeacon", "Light beacon");
            //AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs/DarkBeacon", "Dark beacon");
            //AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Test", "Test random assignment");
            #endregion
            #region 1.0.2.6
            //AddEntry("Content/Ultimate/UltAlexander", "The Epic of Alexander (Ultimate)");
            //AddEntry("Content/Ultimate/UltAlexander/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltAlexander/LimitCutAM", "Limit Cut automarker");
            //AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs/One", "One");
            //AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs/Two", "Two");
            //AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs/Three", "Three");
            //AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs/Four", "Four");
            //AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs/Five", "Five");
            //AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs/Six", "Six");
            //AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs/Seven", "Seven");
            //AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs/Eight", "Eight");
            //AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Test", "Test random assignment");
            //AddEntry("Content/Ultimate/UltAlexander/WaterLightningAM", "Compressed Water/Lightning automarker");
            //AddEntry("Content/Ultimate/UltAlexander/WaterLightningAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltAlexander/WaterLightningAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltAlexander/WaterLightningAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltAlexander/WaterLightningAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltAlexander/WaterLightningAM/Signs/Water", "Compressed Water");
            //AddEntry("Content/Ultimate/UltAlexander/WaterLightningAM/Signs/Lightning", "Compressed Lightning");
            //AddEntry("Content/Ultimate/UltAlexander/WaterLightningAM/Test", "Test random assignment");
            //AddEntry("Content/Ultimate/UltAlexander/TemporalAM", "Temporal Stasis automarker");
            //AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltAlexander/TemporalAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltAlexander/TemporalAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs/House1", "House Arrest 1");
            //AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs/House2", "House Arrest 2");
            //AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs/Restraining1", "Restraining Order 1");
            //AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs/Restraining2", "Restraining Order 2");
            //AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs/Aggravated1", "Aggravated Assault 1");
            //AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs/Aggravated2", "Aggravated Assault 2");
            //AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs/Nothing1", "Nothing 1");
            //AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs/Nothing2", "Nothing 2");
            //AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Prio", "Priority configuration");
            //AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Test", "Test random assignment");
            //AddEntry("Content/Ultimate/UltAlexander/CrystalAM", "Inception Crystal automarker");
            //AddEntry("Content/Ultimate/UltAlexander/CrystalAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltAlexander/CrystalAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltAlexander/CrystalAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltAlexander/CrystalAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltAlexander/CrystalAM/Signs/Crystal1", "Crystal 1");
            //AddEntry("Content/Ultimate/UltAlexander/CrystalAM/Signs/Crystal2", "Crystal 2");
            //AddEntry("Content/Ultimate/UltAlexander/CrystalAM/Signs/Crystal3", "Crystal 3");
            //AddEntry("Content/Ultimate/UltAlexander/CrystalAM/Signs/Crystal4", "Crystal 4");
            //AddEntry("Content/Ultimate/UltAlexander/CrystalAM/Prio", "Priority configuration");
            //AddEntry("Content/Ultimate/UltAlexander/CrystalAM/Test", "Test random assignment");
            //AddEntry("Content/Ultimate/UltAlexander/InceptionAM", "Inception Formation automarker");
            //AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltAlexander/InceptionAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltAlexander/InceptionAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs/SharedSentence", "Shared Sentence");            
            //AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs/Restraining1", "Restraining Order 1");
            //AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs/Restraining2", "Restraining Order 2");
            //AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs/Aggravated1", "Aggravated Assault 1");
            //AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs/Aggravated2", "Aggravated Assault 2");
            //AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs/Nothing1", "Nothing 1");
            //AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs/Nothing2", "Nothing 2");
            //AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs/Nothing3", "Nothing 3");
            //AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Prio", "Priority configuration");
            //AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Test", "Test random assignment");
            //AddEntry("Content/Ultimate/UltAlexander/WormholeAM", "Wormhole automarker");
            //AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltAlexander/WormholeAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltAlexander/WormholeAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs/One", "One");
            //AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs/Two", "Two");
            //AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs/Three", "Three");
            //AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs/Four", "Four");
            //AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs/Five", "Five");
            //AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs/Six", "Six");
            //AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs/Seven", "Seven");
            //AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs/Eight", "Eight");
            //AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Test", "Test random assignment");
            //AddEntry("Content/Ultimate/UltAlexander/FinalWordAM", "Final Word automarker");
            //AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs/LightBeacon", "Light beacon");
            //AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs/Light1", "Light 1");
            //AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs/Light2", "Light 2");
            //AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs/Light3", "Light 3");
            //AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs/DarkBeacon", "Dark beacon");
            //AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs/Dark1", "Dark 1");
            //AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs/Dark2", "Dark 2");
            //AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs/Dark3", "Dark 3");
            //AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Test", "Test random assignment");
            #endregion
            #region 1.0.2.4
            //AddEntry("Content/Criterion/EwCritAloalo/PlayerMarch", "Planar Tactics rotation indicator");
            AddEntry("Content/Criterion/EwCritAloalo/PlayerMarch/Enabled", "활성화");
            //AddEntry("Content/Criterion/EwCritAloalo/PlayerMarch/IndicatorColor", "Direction indicator color");
            //AddEntry("Content/Criterion/EwCritAloalo/PlayerMarch/Test", "Test random direction");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticeReload", "Statice bullet reload indicator");
            AddEntry("Content/Criterion/EwCritAloalo/StaticeReload/Enabled", "활성화");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticeReload/LoadedColor", "Loaded chamber color");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticeReload/MisloadedColor", "Misloaded chamber color");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticeReload/UnloadedColor", "Unloaded chamber color");
            //AddEntry("Content/Criterion/EwCritAloalo/StaticeReload/Test", "Test random bullets on player");
            #endregion
            #region 1.0.2.3
            //AddEntry("Content/Criterion", "Criterion Dungeons");
            AddEntry("Content/Criterion/Enabled", "활성화");
            //AddEntry("Content/Criterion/EwCritAloalo", "Another Aloalo Island");
            AddEntry("Content/Criterion/EwCritAloalo/Enabled", "활성화");
            //AddEntry("Content/Criterion/EwCritAloalo/SpringCrystal", "Spring Crystals safe spot indicator");
            AddEntry("Content/Criterion/EwCritAloalo/SpringCrystal/Enabled", "활성화");
            //AddEntry("Content/Criterion/EwCritAloalo/SpringCrystal/SafeSpotColor", "Safe spot indicator color");
            //AddEntry("Content/Criterion/EwCritAloalo/SpringCrystal/Test", "Test on player");
            //AddEntry("Content/Criterion/EwCritAloalo/LalaRotation", "Lala rotation indicator");
            AddEntry("Content/Criterion/EwCritAloalo/LalaRotation/Enabled", "활성화");
            //AddEntry("Content/Criterion/EwCritAloalo/LalaRotation/SafeZoneColor", "Safe zone indicator color");
            //AddEntry("Content/Criterion/EwCritAloalo/LalaRotation/Test", "Test on player with random direction");
            //AddEntry("Content/Criterion/EwCritAloalo/PlayerRotation", "Unseen shield rotation indicator");
            AddEntry("Content/Criterion/EwCritAloalo/PlayerRotation/Enabled", "활성화");
            //AddEntry("Content/Criterion/EwCritAloalo/PlayerRotation/IndicatorColor", "Shield indicator color");
            //AddEntry("Content/Criterion/EwCritAloalo/PlayerRotation/Test", "Test random direction");
            //AddEntry("Content/Ultimate/UltUcob/FireballAm", "(P2) Fireball automarker");
            AddEntry("Content/Ultimate/UltUcob/FireballAm/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltUcob/FireballAm/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltUcob/FireballAm/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            //AddEntry("Content/Ultimate/UltUcob/FireballAm/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltUcob/FireballAm/Signs/FireballTarget", "Fireball target");
            //AddEntry("Content/Ultimate/UltUcob/FireballAm/Test", "Test random assignment");
            //AddEntry("Content/Debug/Debugger/EventLogger/IncludeLocation", "Include location information");
            //AddEntry("Content/Debug/Debugger/EventLogger/ResolveNames", "Resolve action and status names");
            #endregion
            #region 1.0.2.2
            AddEntry("Content/Ultimate/UltUcob/GrandOctetAm", "(3 페이즈) 용들의 8중주/군룡 트윈타니아 오토마커");
            AddEntry("Content/Ultimate/UltUcob/GrandOctetAm/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltUcob/GrandOctetAm/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltUcob/GrandOctetAm/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/Ultimate/UltUcob/GrandOctetAm/Signs", "마커 설정");
            AddEntry("Content/Ultimate/UltUcob/GrandOctetAm/Signs/TwistingDive", "트윈타니아");
            AddEntry("Content/Ultimate/UltUcob/GrandOctetAm/Test", "랜덤 할당 테스트");
            #endregion
            #region 1.0.2.1
            AddEntry("Job/BLU", "청마도사");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm", "(P3) 연격의 삼중주 오토마커");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs1", "마력연성");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs1/Hatch1", "마력연성 1");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs1/Hatch2", "마력연성 2");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs1/Hatch3", "마력연성 3");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs1/Nonhatch1", "무징 1");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs1/Nonhatch2", "무징 2");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs1/Nonhatch3", "무징 3");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs2", "어스");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs2/Shaker1", "어스 1");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs2/Shaker2", "어스 2");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs2/Shaker3", "어스 3");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs2/Shaker4", "어스 4");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Prio", "우선 순위 설정");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Test", "랜덤 할당 테스트");
            #endregion
            #region 1.0.2.0
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM", "(천영 4층) 열소설 1 오토마커");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Enabled", "활성화");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs1", "초기 징 설정");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs1/InitialWind1", "첫 번째 불 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs1/InitialWind2", "첫 번째 불 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2", "첫 번째 불 이후");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2/Fire1", "불 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2/Fire2", "불 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2/Fire3", "불 3");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2/Fire4", "불 4");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2/Wind1", "바람 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2/Wind2", "바람 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2/Wind3", "바람 3");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2/Wind4", "바람 4");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs3", "두 번째 불 이후");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs3/Fire1", "불 쉐어 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs3/Fire2", "불 쉐어 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs3/OldFire1", "불 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs3/OldFire2", "불 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Prio", "우선 순위 설정");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Test", "랜덤 할당 테스트");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM", "(천영 4층) 열소설 2 오토마커");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Enabled", "활성화");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs", "마커 설정");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs/Fire1", "첫 불");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs/Wind1", "바람 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs/Wind2", "바람 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs/Wind3", "바람 3");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs/Wind4", "바람 4");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs/Wind5", "바람 5");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs/Wind6", "바람 6");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs/Wind7", "바람 7");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Prio", "우선 순위 설정");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Test", "랜덤 할당 테스트");
            #endregion
            #region 1.0.1.8
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM", "(천영 4층) 범생설 오토마커");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Enabled", "활성화");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs", "마커 설정");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs/LongLight", "긴 빛");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs/ShortLight", "짧은 빛");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs/LongDark", "긴 어둠");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs/ShortDark", "짧은 어둠");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs/One1", "1중첩 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs/One2", "1중첩 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs/Nothing1", "무징 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs/Nothing2", "무징 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Prio", "우선 순위 설정");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Test", "랜덤 할당 테스트");
            #endregion
            #region 1.0.1.6
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM", "(천영 1층) 주사위 오토마커");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/Enabled", "활성화");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/Signs", "마커 설정");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/Signs/LimitCut2", "주사위 2번");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/Signs/LimitCut4", "주사위 4번");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/Signs/LimitCut6", "주사위 6번");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/Signs/LimitCut8", "주사위 8번");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/Signs/BlueMarker", "청옥");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/Test", "할당 테스트");
            #endregion
            #region 1.0.1.5
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotVisuals", "트래커 화면 설정");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotVisuals/BarWidth", "트래커 너비");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotVisuals/ItemHeight", "트래커 높이");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotVisuals/ShowBar", "트래커 보기");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotVisuals/ShowIcon", "스킬 아이콘 보기");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotVisuals/ShowTime", "스킬 시간 보기");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotVisuals/ItemOffsetWorld", "게임 내 좌표에서의 트래커 위치");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotVisuals/ItemOffsetScreen", "화면 내 좌표에서의 트래커 위치");
            #endregion
            #region 1.0.1.4
            AddEntry("Content/Miscellaneous/Overlays", "오버레이");
            AddEntry("Content/Miscellaneous/Overlays/Enabled", "활성화");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker", "DoT 트래커");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/Enabled", "활성화");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotSettings", "DoT 상태 추적 허용하기");
            #endregion
            #region 1.0.1.3
            AddEntry("Timelines/ActionTypes/ChatMessage", "게임 내 채팅 메시지");
            AddEntry("Timelines/ActionTypes/IngameCommand", "게임 내 명령어");
            AddEntry("Timelines/ChatMessageText", "게임 내 채팅창에서 메시지 보기");
            AddEntry("Timelines/ChatMessageSeverity", "메시지 중요도");
            AddEntry("Timelines/IngameCommandText", "실행할 명령어");
            AddEntry("Timelines/ChatMessageSeverity/Normal", "보통");
            AddEntry("Timelines/ChatMessageSeverity/Error", "오류");
            #endregion
            #region 1.0.1.1
            AddEntry("Signs/Attack6", "공격 6");
            AddEntry("Signs/Attack7", "공격 7");
            AddEntry("Signs/Attack8", "공격 8");
            #endregion
            #region 1.0.1.0
            AddEntry("MainMenu/Timelines", "타임라인");
            AddEntry("Timelines/Timeline", "타임라인");
            AddEntry("Timelines/Encounter", "적/페이즈 {0}");
            AddEntry("Timelines/Timeline/None", "(없음)");
            AddEntry("Timelines/ReloadTimeline", "타임라인 다시 불러오기");
            AddEntry("Timelines/Profile/Default", "(디폴트)");
            AddEntry("Timelines/Profile", "프로필");
            AddEntry("Timelines/CreateProfile", "새 프로필 생성");
            AddEntry("Timelines/CreateNewProfileAs", "다른 이름으로 새 프로필 생성");
            AddEntry("Timelines/CloneProfile", "프로필 복사");
            AddEntry("Timelines/CloneProfileAs", "다른 이름으로 프로필 복사");
            AddEntry("Timelines/DeleteProfile", "프로필 삭제");
            AddEntry("Timelines/PreviewActive", "오버레이가 보이는 동안 오버레이의 이동 및 크기 변경이 가능해요. 현재 보고 있는 오버레이는 미리보기로 실제 동작보다 빠르게 동작하고 있어요. 오버레이의 미리보기 중에는 실제 타임라인을 볼 수 없어요.");
            AddEntry("Timelines/PreviewTestAbilityName", "스킬 이름 테스트");
            AddEntry("Timelines/Settings/ShowOverlay", "타임라인을 사용할 수 있을 경우 표시하기");
            AddEntry("Timelines/Settings/BarColor", "다음 기믹 배경색");
            AddEntry("Timelines/Settings/BarSoonColor", "경고 기믹 배경색");
            AddEntry("Timelines/Settings/BarActiveColor", "실행 중인 기믹 배경색");
            AddEntry("Timelines/Settings/BarTextColor", "다음 기믹 글자색");
            AddEntry("Timelines/Settings/BarSoonTextColor", "경고 기믹 글자색");
            AddEntry("Timelines/Settings/BarActiveTextColor", "다음 기믹 글자색");
            AddEntry("Timelines/Settings/BarBgColor", "타임라인 배경색");
            AddEntry("Timelines/Settings/ShowBarHead", "타이머 막대 끝 부분 강조하기");
            AddEntry("Timelines/Settings/ShowBarName", "기믹 이름 보기");
            AddEntry("Timelines/Settings/ShowBarTime", "남은 시간 보기");
            AddEntry("Timelines/Settings/ShowBarCaps", "기믹 이름을 항상 대문자로 보기");
            AddEntry("Timelines/Settings/ShowDebug", "타임라인 디버그 정보 보기");
            AddEntry("Timelines/Settings/BarStyle", "타임라인 타이머 막대 스타일");
            AddEntry("Timelines/Settings/BarStyles/Solid", "평면");
            AddEntry("Timelines/Settings/BarStyles/Fancy", "입체");
            AddEntry("Timelines/Settings/BarHeight", "타이머 막대 높이");
            AddEntry("Timelines/Settings/BarTextScale", "글자 크기");
            AddEntry("Timelines/Settings/TimeThreshold", "타임라인을 표시할 시간(초 이하)");
            AddEntry("Timelines/Settings/SoonThreshold", "경고 문구 표시 유지 시간(초)");
            AddEntry("Timelines/Settings/PastThreshold", "완료한 기믹 표시(초)");
            AddEntry("Timelines/SpecialTags/Targettable", "타깃 가능");
            AddEntry("Timelines/SpecialTags/Untargettable", "타깃 불가능");
            AddEntry("MainMenu/Settings/TimelineSettings", "타임라인 설정");
            AddEntry("MainMenu/Settings/TimelineTabVisible", "타임라인 탭 보기");
            AddEntry("MainMenu/Settings/TimelineLocalAllowed", "로컬 타임라인 사용하기");
            AddEntry("MainMenu/Settings/TimelineLocalFolder", "로컬 타임라인 폴더");
            AddEntry("MainMenu/Settings/TimelineLocalReload", "모든 로컬 타임라인 다시 불러오기");
            AddEntry("MainMenu/Settings/TimelineOverlaySettings", "타임라인 오버레이 설정");
            //AddEntry("Timelines/ProfileDetails", "Profile settings");
            //AddEntry("Timelines/EventDetails", "Timeline events");
            //AddEntry("Timelines/Reactions", "Reactions");
            //AddEntry("Timelines/ProfileSettings/DefaultApplied", "The default profile is considered global for the timeline, and any settings and reactions from it are always applied in addition to settings and reactions from any other profiles that may be in use.");
            //AddEntry("Timelines/ProfileSettings/ShowOverlay", "Show overlay when this profile is applied");
            //AddEntry("Timelines/ProfileSettings/ReactionsActive", "Enable reactions when this profile is applied");
            //AddEntry("Timelines/ProfileSettings/ApplyAlways", "Use this profile always");
            //AddEntry("Timelines/ProfileSettings/ApplyProfileOnJob", "Use this profile when on any of the following jobs:");
            //AddEntry("Timelines/EventSettings/ShowOverlay", "Show this event on timeline overlay");
            //AddEntry("Timelines/EventSettings/ReactionsActive", "Enable reactions on this event");
            //AddEntry("Timelines/Reactions/NewReaction", "Create a new reaction");
            //AddEntry("Timelines/Reactions/CloneReaction", "Clone reaction");
            //AddEntry("Timelines/Reactions/DeleteReaction", "Delete reaction");
            //AddEntry("Timelines/Reactions/TestReaction", "Test reaction");
            //AddEntry("Timelines/CreateNewReactionAs", "Create new reaction as..");
            //AddEntry("Timelines/CloneReactionAs", "Clone reaction as..");            
            //AddEntry("Timelines/Actions", "Actions");
            //AddEntry("Timelines/Status/ActiveTimeline", "Currently active timeline");
            //AddEntry("Timelines/Status/ActiveProfile", "Currently active profile");
            //AddEntry("Timelines/Status/InactiveTimeline", "No timeline is currently active or available for this zone.");
            //AddEntry("Timelines/ReactionSettings/TimeOffset", "Time offset from event (random within specified range)");
            //AddEntry("Timelines/Actions/NewAction", "Create a new action");
            //AddEntry("Timelines/Actions/CloneAction", "Clone action");
            //AddEntry("Timelines/Actions/DeleteAction", "Delete action");
            //AddEntry("Timelines/Actions/TestAction", "Test action");
            //AddEntry("Timelines/ActionTypes", "Action type");
            //AddEntry("Timelines/ActionTypes/Notification", "Notification");
            //AddEntry("Timelines/NotificationSeverity", "Severity");
            //AddEntry("Timelines/NotificationSeverity/Critical", "Critical");
            //AddEntry("Timelines/NotificationSeverity/Important", "Important");
            //AddEntry("Timelines/NotificationSeverity/Normal", "Normal");
            //AddEntry("Timelines/NotificationSoundEffect", "Sound effect");
            //AddEntry("Timelines/NotificationText", "Text message");
            //AddEntry("Timelines/NotificationTTL", "Notification time-to-live");
            //AddEntry("Timelines/NotificationTTS", "Use text-to-speech");
            //AddEntry("SoundEffect/None", "No sound effect");
            AddEntry("MainMenu/Settings/NotificationOverlaySettings", "알림 오버레이 설정");
            AddEntry("Notifications/PreviewActive", "오버레이가 보이는 동안 오버레이의 이동 및 크기 변경이 가능해요. 현재 표시된 오버레이는 미리보기이며, 오버레이의 미리보기 중에는 실제 알림을 볼 수 없어요.");
            AddEntry("Notifications/Settings/ShowOverlay", "알림 오버레이 보기");
            AddEntry("Notifications/TestNotification", "테스트 알림: {0}");
            AddEntry("Notifications/Settings/TextScale", "알림 글자 크기");
            AddEntry("Notifications/Settings/EntryHeight", "알림 높이");
            AddEntry("Notifications/Settings/NotificationOrderReverse", "새 알림을 위가 아닌 아래에서 보기");
            AddEntry("Notifications/Settings/TextAlignments", "알림 텍스트 정렬");
            AddEntry("Notifications/Settings/TextAlignments/Left", "왼쪽 정렬");
            AddEntry("Notifications/Settings/TextAlignments/Center", "가운데 정렬");
            AddEntry("Notifications/Settings/TextAlignments/Right", "오른쪽 정렬");
            AddEntry("Notifications/Settings/CriticalTextColor", "심각 등급 알림 글자색");
            AddEntry("Notifications/Settings/CriticalBgColor", "심각 등급 알림 배경색");
            AddEntry("Notifications/Settings/ImportantTextColor", "중요 등급 알림 글자색");
            AddEntry("Notifications/Settings/ImportantBgColor", "중요 등급 알림 배경색");
            AddEntry("Notifications/Settings/NormalTextColor", "보통 등급 알림 글자색");
            AddEntry("Notifications/Settings/NormalBgColor", "보통 등급 알림 배경색");
            AddEntry("Notifications/Settings/EntryMargin", "수직 텍스트 여백");
            //AddEntry("Timelines/ReactionSettings/Triggers", "Reaction trigger");
            //AddEntry("Timelines/ReactionSettings/Triggers/Timed", "Timed");
            //AddEntry("Timelines/ReactionSettings/Triggers/OnCastBegin", "When ability begins casting");
            //AddEntry("Timelines/ReactionSettings/Triggers/OnCastEnd", "When ability executes");
            //AddEntry("Timelines/ReactionSettings/Triggers/Targettable", "When combatant becomes targettable");
            //AddEntry("Timelines/ReactionSettings/Triggers/Untargettable", "When combatant becomes untargettable");
            //AddEntry("Timelines/ReactionSettings/Triggers/Spawn", "When combatant spawns");
            AddEntry("MainMenu/Settings/TtsSettings", "TTS 설정");
            AddEntry("TextToSpeech/Settings/TTSEnabled", "TTS 활성화");
            AddEntry("TextToSpeech/Settings/TTSAllNotifications", "모든 알림에 대해 TTS 자동 변환");
            AddEntry("TextToSpeech/Settings/TTSSpeed", "말하기 속도");
            AddEntry("TextToSpeech/Settings/TTSVolume", "말하기 볼륨");
            AddEntry("Content/Debug/Timelines", "타임라인");
            AddEntry("Content/Debug/Timelines/Enabled", "활성화");
            AddEntry("Content/Debug/Timelines/TimelineRecorder", "타임라인 기록");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/Enabled", "활성화");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/StartRecordingOnCombat", "전투 시작 자동으로 기록 시작/재시작");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/SuspendRecordingAfterCombat", "전투 종료 시 자동으로 기록 일시 중지, 전투 재시작 시 기록 재시작");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/StopRecordingAfterCombat", "전투 종료 시 자동으로 기록 중지, 현재 기록 마무리");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/ResumeRecordingOnTargettable", "적을 타깃할 수 있을 때 기록 재시작");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/SuspendRecordingOnUntargettable", "적을 타깃할 수 없을 때 기록 일시 중지");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/StopRecordingOnUntargettable", "적을 타깃할 수 없을 때 기록 중지");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/TargetFolder", "타임라인 대상 폴더");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/CurrentStatus", "현재 기록 상태");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/CurrentTargetFile", "현재 기록 대상 파일");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/StartRecordingAction", "기록 시작/재시작");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/SuspendRecordingAction", "기록 일시 중지");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/StopRecordingAction", "기록 중지 후 마무리");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/IgnoreAutoAttacks", "자동 공격 무시하기");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/IgnoreSpawns", "새 전투 대상 무시");
            AddEntry("TimelineRecorder/Idle", "중지");
            AddEntry("TimelineRecorder/Recording", "기록 중");
            AddEntry("TimelineRecorder/Suspended", "기록 일시 중지");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM", "(5 페이즈) 지천의 진: 죽음 오토마커");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs", "마커 설정");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/Doom1", "죽음의 선고 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/Doom2", "죽음의 선고 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/Doom3", "죽음의 선고 3");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/Doom4", "죽음의 선고 4");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/NonDoom1", "무징 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/NonDoom2", "무징 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/NonDoom3", "무징 3");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/NonDoom4", "무징 4");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Prio", "우선 순위 설정");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Test", "할당 테스트 (우선 순위 고려)");
            #endregion
            #region <1.0.1.0
            AddEntry("Command/QuickToggleAutomarkers/On", "Lemegeton: 오토마커가 활성화되었습니다.");
            AddEntry("Command/QuickToggleAutomarkers/Off", "Lemegeton: 오토마커가 비활성화되었습니다");
            AddEntry("Command/QuickToggleOverlays/On", "Lemegeton: 그리기 및 오버레이가 활성화되었습니다.");
            AddEntry("Command/QuickToggleOverlays/Off", "Lemegeton: 그리기 및 오버레이가 비활성화되었습니다.");
            AddEntry("Command/QuickToggleSound/On", "Lemegeton: 소리 기능이 활성화되었습니다.");
            AddEntry("Command/QuickToggleSound/Off", "Lemegeton: 소리 기능이 비활성화되었습니다.");
            AddEntry("Command/QuickToggleHacks/On", "Lemegeton: 핵 및 게임 변경 기능이 활성화되었습니다.");
            AddEntry("Command/QuickToggleHacks/Off", "Lemegeton: 핵 및 게임 변경 기능이 비활성화되었습니다.");
            AddEntry("Command/QuickToggleAutomation/On", "Lemegeton: 자동화 기능이 활성화되었습니다.");
            AddEntry("Command/QuickToggleAutomation/Off", "Lemegeton: 자동화 기능이 비활성화되었습니다.");
            AddEntry("Command/AutomarkerSoft/On", "Lemegeton: 클라이언트 측의 소프트 마커가 활성화되었습니다.");
            AddEntry("Command/AutomarkerSoft/Off", "Lemegeton: 클라이언트 측의 소프트 마커가 비활성화되었습니다.");
            AddEntry("Status/AtAGlance", "한눈에 보기");
            AddEntry("Status/CurrentlyActive", "현재 활성화된 기능");
            AddEntry("Status/ImpactToFunctionality", "기능에 미치는 영향");
            AddEntry("Status/AllIsWell", "모든 기능이 정상적으로 작동할 거예요!");
            AddEntry("Status/StatusGotOpcodesTrue", "네트워크 옵코드 불러오기 완료");
            AddEntry("Status/StatusGotOpcodesFalse", "네트워크 옵코드를 불러올 수 없어요!");
            AddEntry("Status/StatusMarkingFuncAvailableTrue", "마킹 기능 활성화 중");
            AddEntry("Status/StatusMarkingFuncAvailableFalse", "마킹 기능을 찾을 수 없어요!");
            AddEntry("Status/StatusPostCommandAvailableTrue", "커맨드 포스트 기능 활성화 중");
            AddEntry("Status/StatusPostCommandAvailableFalse", "커맨드 포스트 기능을 찾을 수 없어요!");
            AddEntry("Status/StatusNetworkTrafficUpTrue", "서버에 대한 네트워크 트래픽은 정상인 것 같아요");
            AddEntry("Status/StatusNetworkTrafficUpFalse", "지난 일 분 동안 서버에 대한 네트워크 트래픽을 찾지 못했어요!");
            AddEntry("Status/StatusNetworkTrafficDownTrue", "서버의 네트워크 트래픽은 정상인 것 같아요");
            AddEntry("Status/StatusNetworkTrafficDownFalse", "지난 일 분 동안 서버의 네트워크 트래픽을 찾지 못했어요!");
            AddEntry("Status/WarnNoOpcodes", "옵코드를 이용할 수 없네요. 네트워크 트래픽을 읽을 수 없고, 게임 내 이벤트를 확인할 수 없어요. 꽤 많은 기능이 고장났을 가능성이 있어요!");
            AddEntry("Status/WarnOpcodesVersion", "옵코드가 현재 실행 중인 ({1}) 버전과는 다른 게임 버전인 ({0})의 거예요. 이 오류는 게임 업데이트 직후 발생할 수 있고, 수정하려면 업데이트를 해야 해요. 꽤 많은 기능이 고장났을 가능성이 있어요!");
            AddEntry("Status/WarnAutomarkersBroken", "어떠한 마킹 방법도 이용할 수 없어서 오토 마킹을 실행할 수 없어요. 오토마커가 고장났어요!");
            AddEntry("Status/WarnAutomarkersSemibroken", "기본 마킹 방법은 이용할 수 없지만, 보조 마킹 방법은 이용할 수 있는 것 같아요. 오토마커가 정상적으로 이용 가능하지만, 오토마커에 무슨 일이 생긴다면 아마 이 이유 때문일 거예요.");
            AddEntry("Status/WarnCommandPostBroken", "기본 마킹 방법은 이용이 가능하지만, 보조 마킹 방법은 이용이 불가능합니다. 오토마커 기능에 영향은 없겠지만, 참고해 주세요.");
            AddEntry("Status/WarnNoTrafficUp", "네트워크 트래픽이 서버에 연결되지 않아, 끊겼을 가능성이 있어요. 당신의 액션이 반영되지 않을 수 있어요.");
            AddEntry("Status/WarnNoTrafficDown", "네트워크 트래픽이 서버로부터 수신할 수 없어요. 네트워크가 끊어졌거나 플러그인이 네트워크 데이터를 수신하지 않았을 가능성이 있어요. 어느 쪽이든 서버로부터 정보를 받지 못하면 많은 기능이 고장날 수 있어요!");
            AddEntry("Status/WarnHacksActive", "적어도 하나의 핵 및 게임 변경 기능이 활성화되어 있어요. 이 기능은 시청자에게 일목요연하게 보여요. 따라서, 스트리밍은 권장하지 않을게요.");
            AddEntry("Status/WarnAutomationsActive", "적어도 하나의 자동화 기능이 활성화되어 있어요. 이 기능은 시청자에게 일목요연하게 보여요. 따라서, 스트리밍은 권장하지 않을게요.");
            AddEntry("Status/WarnDrawsActive", "적어도 하나의 그리기 및 오버레이 기능이 활성화되어 있어요. 스트리밍을 할 경우에는 오버레이가 보이지 않도록 캡처 설정을 확인해 주세요.");
            AddEntry("Status/WarnAutomarkersQuickDisabled", "적어도 하나의 오토마커가 활성화되어 있지만, 설정의 '퀵 토글'에서 비활성화되어 있어요.");
            AddEntry("Status/WarnOverlaysQuickDisabled", "적어도 하나의 그리기 및 오버레이 기능이 활성화되어 있지만, 설정의 '퀵 토글'에서 비활성화되어 있어요.");
            AddEntry("Status/WarnSoundQuickDisabled", "적어도 하나의 소리 기능이 활성화되어 있지만, 설정의 '퀵 토글'에서 비활성화되어 있어요.");
            //AddEntry("Status/WarnHackQuickDisabled", "You have at least one hack or game-altering feature enabled, but hacks and game-altering features are currently disabled in the settings, under 'Quick toggles'.");
            //AddEntry("Status/WarnAutomationQuickDisabled", "You have at least one automation feature enabled, but automation features are currently disabled in the settings, under 'Quick toggles'.");
            AddEntry("Status/NumFeaturesAutomarker", "오토마커");
            AddEntry("Status/NumFeaturesDrawing", "그리기 및 오버레이");
            AddEntry("Status/NumFeaturesSound", "소리 기능");
            AddEntry("Status/NumFeaturesHack", "핵 및 게임 변경 기능");
            AddEntry("Status/NumFeaturesAutomation", "자동화 기능");
            AddEntry("SoundEffect/Se1", "효과음 1");
            AddEntry("SoundEffect/Se2", "효과음 2");
            AddEntry("SoundEffect/Se3", "효과음 3");
            AddEntry("SoundEffect/Se4", "효과음 4");
            AddEntry("SoundEffect/Se5", "효과음 5");
            AddEntry("SoundEffect/Se6", "효과음 6");
            AddEntry("SoundEffect/Se7", "효과음 7");
            AddEntry("SoundEffect/Se8", "효과음 8");
            AddEntry("SoundEffect/Se9", "효과음 9");
            AddEntry("SoundEffect/Se10", "효과음 10");
            AddEntry("SoundEffect/Se11", "효과음 11");
            AddEntry("SoundEffect/Se12", "효과음 12");
            AddEntry("SoundEffect/Se13", "효과음 13");
            AddEntry("SoundEffect/Se14", "효과음 14");
            AddEntry("SoundEffect/Se15", "효과음 15");
            AddEntry("SoundEffect/Se16", "효과음 16");
            AddEntry("ObjectKind/None", "없음");
            AddEntry("ObjectKind/Player", "플레이어");
            AddEntry("ObjectKind/BattleNpc", "적/전투 NPC");
            AddEntry("ObjectKind/EventNpc", "이벤트 NPC");
            AddEntry("ObjectKind/Treasure", "보물상자");
            AddEntry("ObjectKind/Aetheryte", "에테라이트");
            AddEntry("ObjectKind/GatheringPoint", "채집 포인트");
            AddEntry("ObjectKind/EventObj", "이벤트 오브젝트");
            AddEntry("ObjectKind/MountType", "탈것");
            AddEntry("ObjectKind/Companion", "꼬마 친구");
            AddEntry("ObjectKind/Retainer", "리테이너");
            AddEntry("ObjectKind/Area", "지역 오브젝트");
            AddEntry("ObjectKind/Housing", "하우징 오브젝트");
            AddEntry("ObjectKind/Cutscene", "컷신 오브젝트");
            AddEntry("ObjectKind/CardStand", "카드 스탠드");
            AddEntry("ObjectKind/Ornament", "오너먼트");
            AddEntry("Misc/None", "(없음)");
            //AddEntry("Misc/HQ", "HQ");
            //AddEntry("Misc/SavePreset", "Save preset");
            //AddEntry("Misc/SaveNewPresetAs", "Save new preset as..");
            //AddEntry("Misc/DeletePreset", "Delete preset");
            //AddEntry("Misc/OpenShortcut", "Open Lemegeton");
            //AddEntry("Misc/ShowAdvancedOptions", "Show advanced options");
            //AddEntry("Misc/HideAdvancedOptions", "Hide advanced options");
            //AddEntry("Misc/DragToReorderPrio", "Left-click and drag to reorder priority");
            //AddEntry("Misc/RiskyFeature", "This is a hack or a game-altering feature, that may modify game data/state beyond what is normally considered possible. The feature is generally safe to use, but streaming with it on is not recommended. Use at your own discretion!");
            //AddEntry("Misc/ExperimentalFeature", "This is an experimental feature, and while it has been tested, there may still be some bugs that have not been found. If the feature doesn't work for you, or you notice anything strange, please report it on the Discord server so it can be fixed!");
            AddEntry("Trinity/Tank", "탱커");
            AddEntry("Trinity/Healer", "힐러");
            AddEntry("Trinity/DPS", "딜러");
            AddEntry("Role/Tank", "탱커");
            AddEntry("Role/Healer", "힐러");
            AddEntry("Role/Melee", "근거리 딜러");
            AddEntry("Role/Ranged", "원거리 딜러");
            AddEntry("Role/Caster", "캐스터");
            AddEntry("Job/PLD", "나이트");
            AddEntry("Job/WAR", "전사");
            AddEntry("Job/DRK", "암흑기사");
            AddEntry("Job/GNB", "건브레이커");
            AddEntry("Job/WHM", "백마도사");
            AddEntry("Job/SCH", "학자");
            AddEntry("Job/AST", "점성술사");
            AddEntry("Job/SGE", "현자");
            AddEntry("Job/MNK", "몽크");
            AddEntry("Job/DRG", "용기사");
            AddEntry("Job/NIN", "닌자");
            AddEntry("Job/SAM", "사무라이");
            AddEntry("Job/RPR", "리퍼");
            AddEntry("Job/BRD", "음유시인");
            AddEntry("Job/MCH", "기공사");
            AddEntry("Job/DNC", "무도가");
            AddEntry("Job/BLM", "흑마도사");
            AddEntry("Job/SMN", "소환사");
            AddEntry("Job/RDM", "적마도사");
            AddEntry("Signs/None", "없음");
            AddEntry("Signs/Attack1", "공격 1");
            AddEntry("Signs/Attack2", "공격 2");
            AddEntry("Signs/Attack3", "공격 3");
            AddEntry("Signs/Attack4", "공격 4");
            AddEntry("Signs/Attack5", "공격 5");
            AddEntry("Signs/Bind1", "속박 1");
            AddEntry("Signs/Bind2", "속박 2");
            AddEntry("Signs/Bind3", "속박 3");
            AddEntry("Signs/Ignore1", "금지 1");
            AddEntry("Signs/Ignore2", "금지 2");
            AddEntry("Signs/Circle", "동그라미");
            AddEntry("Signs/Plus", "십자");
            AddEntry("Signs/Square", "네모");
            AddEntry("Signs/Triangle", "세모");
            AddEntry("Signs/AttackNext", "다음 공격");
            AddEntry("Signs/BindNext", "다음 속박");
            AddEntry("Signs/IgnoreNext", "다음 금지");
            AddEntry("Automarker/ManualPreset", "매뉴얼");
            AddEntry("Automarker/PrioType/PartyMember", "플레이어");
            AddEntry("Automarker/PrioType/PartyListOrder", "파티 목록 기준");
            AddEntry("Automarker/PrioType/PartyListCustom", "커스텀 파티 목록 기준");
            AddEntry("Automarker/PrioType/Alphabetic", "알파벳순");
            AddEntry("Automarker/PrioType/Trinity", "탱딜힐 순서");
            AddEntry("Automarker/PrioType/Role", "역할 순서");
            AddEntry("Automarker/PrioType/Job", "직업 순서");
            //AddEntry("Automarker/PrioType/CongaX", "West-east conga line");
            //AddEntry("Automarker/PrioType/CongaY", "North-south conga line");
            AddEntry("Automarker/PrioType/Player", "플레이어 순서");
            AddEntry("Automarker/PrioType/Player/FillFromPartyList", "현재 파티로 채우기");
            //AddEntry("Automarker/PrioType/Player/FillFromCongaLine", "Fill from west-east conga line");
            //AddEntry("Automarker/PrioType/PlCustom/FillFromCongaLine", "Fill from west-east conga line");
            //AddEntry("Automarker/PrioType/PartyListOrder/Reversed", "Sort bottom-to-top instead of top-to-bottom");
            //AddEntry("Automarker/PrioType/Alphabetic/Reversed", "Sort in descending order instead of ascending");
            //AddEntry("Automarker/PrioType/CongaX/Reversed", "Do a east-west conga line instead of west-east");
            //AddEntry("Automarker/PrioType/CongaY/Reversed", "Do a south-north conga line instead of north-south");
            //AddEntry("Automarker/TimingType/InheritDesc", "Inherit timing settings from default settings");
            AddEntry("MainMenu/Settings/QuickToggles", "퀵 토글");
            AddEntry("MainMenu/Settings/QuickToggles/Info", "이 설정을 사용하면 해당 기능을 빠르게 비활성화할 수 있어요. 내용 및 유형에 관계없이 가능한 모든 기능이 영향을 받아요.");
            AddEntry("MainMenu/Settings/QuickToggles/Automarkers", "오토마커 허용");
            AddEntry("MainMenu/Settings/QuickToggles/Overlays", "그리기 및 오버레이 허용");
            AddEntry("MainMenu/Settings/QuickToggles/Sound", "소리 허용");
            AddEntry("MainMenu/Settings/QuickToggles/Hacks", "핵 및 게임 변경 기능 허용");
            AddEntry("MainMenu/Settings/QuickToggles/Automation", "자동화 기능 허용");
            AddEntry("MainMenu/Status", "상태");
            AddEntry("MainMenu/Content", "콘텐츠");
            AddEntry("MainMenu/Other", "기타");
            AddEntry("MainMenu/Settings", "설정");
            AddEntry("MainMenu/Settings/UiSettings", "UI 설정");
            AddEntry("MainMenu/Settings/Language", "언어");
            AddEntry("MainMenu/Settings/AdvancedOptions", "모든 콘텐츠 항목에서 항상 고급 옵션 보기");
            AddEntry("MainMenu/Settings/DebugSettings", "디버그 설정");
            AddEntry("MainMenu/Settings/DebugSettings/QueueFramework", "프레임워크 스레드의 작업 대기열");
            AddEntry("MainMenu/Settings/DebugSettings/DelegateDebug", "이벤트 발생 테스트 범위");
            AddEntry("MainMenu/Settings/DebugSettings/Config", "구성 디버그");
            AddEntry("MainMenu/Settings/DebugSettings/LoadConfig", "구성을 디스크에서 다시 불러오기");
            AddEntry("MainMenu/Settings/DebugSettings/SaveConfig", "구성을 디스크에 저장");
            AddEntry("MainMenu/Settings/DebugSettings/BackupConfig", "구성 백업 생성");
            AddEntry("MainMenu/Settings/DebugSettings/ExportConfig", "구성 스냅샷 생성");
            AddEntry("MainMenu/Settings/DebugSettings/ImportConfig", "구성 스냅샷 가져오기");
            AddEntry("MainMenu/Settings/DebugSettings/CopyToClipboard", "스냅샷을 클립보드에 복사");
            AddEntry("MainMenu/Settings/DebugSettings/PasteFromClipboard", "클립보드에서 스냅샷 붙여넣기");
            AddEntry("MainMenu/Settings/DebugOnlyLogAutomarkers", "실저로 적용하지 않고 오토마커만 기록");
            AddEntry("MainMenu/Settings/ShowShortcut", "창이 닫힐 때 바로가기 보기");
            AddEntry("MainMenu/Settings/NagAboutStreaming", "가시적인 영향이 있는 기능이 활성화된 경우 스트리밍에 대해 주의하기");
            AddEntry("MainMenu/Settings/AutomarkerSettings", "오토마커 설정");
            AddEntry("MainMenu/Settings/AutomarkersSoftDesc", "소프트 오토마커는 서버로 전송되지 않아 다른 플레이어에게 보이지 않는 클라이언트 측 마커예요. 이 마커들은 시각적으로는 게임 내 징과 동일하지만, 약간 다르게 보여요.");
            AddEntry("MainMenu/Settings/AutomarkersSoft", "소프트 오토마커 사용하기");
            AddEntry("MainMenu/Settings/AutomarkersSoftPermsMissing", "소프트 오토마커는 별도의 마커로 화면에 그려지기 때문에 그리기 권한이 필요해요. '{2}'의 '{1}'에서 '{0}' 기능을 활성화하여 그리기 권한을 허용해 주세요.");
            AddEntry("MainMenu/Settings/RemoveAutomarkers", "강제적으로 모든 징 지우기");
            AddEntry("MainMenu/Settings/RemoveMarkersAfterCombatEnd", "전투 종료 후 모든 징 지우기");
            AddEntry("MainMenu/Settings/RemoveMarkersAfterWipe", "초기화 이후 모든 징 지우기");
            AddEntry("MainMenu/Settings/AutomarkersCommands", "마킹 기능을 사용할 수 있을 때에도 더 오래된 커맨드 인젝션 사용");
            AddEntry("MainMenu/Settings/AutomarkersInitialApplicationDelay", "초기 마커 적용 지연 (지정된 범위 내 무작위)");
            AddEntry("MainMenu/Settings/AutomarkersSubsequentApplicationDelay", "후속 마커 적용 간격 지연 (지정된 범위 내 무작위)");
            AddEntry("MainMenu/Settings/AutomarkerSeconds", "초");
            AddEntry("MainMenu/Settings/SoftmarkerSettings", "소프트 마커 사용자 정의");
            //AddEntry("MainMenu/Settings/SoftmarkerPreviewActive", "While this menu is open, a softmarker preview that rotates through some of the possible markers will be displayed on your character. No other softmarkers will be displayed at this time.");
            //AddEntry("MainMenu/Settings/SoftmarkerTint", "Marker tint");
            //AddEntry("MainMenu/Settings/SoftmarkerBounce", "Bouncing markers");
            //AddEntry("MainMenu/Settings/SoftmarkerBlink", "Blinking markers");
            //AddEntry("MainMenu/Settings/SoftmarkerScaling", "Marker scaling factor");
            //AddEntry("MainMenu/Settings/SoftmarkerOffsetWorld", "Marker offset in world coordinates");
            //AddEntry("MainMenu/Settings/SoftmarkerOffsetScreen", "Marker offset in screen coordinates");
            AddEntry("MainMenu/Settings/OpcodeSettings", "옵코드 설정");
            AddEntry("MainMenu/Settings/LogUnhandledOpcodes", "처리되지 않은 옵코드 기록");
            AddEntry("MainMenu/Settings/OpcodeUrl", "옵코드 주소");
            AddEntry("MainMenu/Settings/OpcodeRegion", "옵코드 지역");
            AddEntry("MainMenu/Settings/OpcodeReload", "옵코드 다시 불러오기");
            //AddEntry("MainMenu/About", "About");
            AddEntry("Content/missing", "현재 이 유형의 콘텐츠는 이용할 수 없어요!");
            AddEntry("Content/Debug", "디버깅 및 개발 도구");
            AddEntry("Content/Debug/Enabled", "활성화");
            AddEntry("Content/Debug/Debugger", "디버거");
            AddEntry("Content/Debug/Debugger/Enabled", "활성화");
            //AddEntry("Content/Miscellaneous/Hack", "Hacks");
            AddEntry("Content/Miscellaneous/Hack/Enabled", "활성화");
            //AddEntry("Content/Miscellaneous/Hack/Teleporter", "Teleporter");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/Enabled", "활성화");
            //AddEntry("Content/Miscellaneous/Hack/Teleporter/X", "X");
            //AddEntry("Content/Miscellaneous/Hack/Teleporter/Y", "Y");
            //AddEntry("Content/Miscellaneous/Hack/Teleporter/Z", "Z");
            //AddEntry("Content/Miscellaneous/Hack/Teleporter/GetCurrent", "Get current position");
            //AddEntry("Content/Miscellaneous/Hack/Teleporter/Teleport", "Teleport");
            //AddEntry("Content/Miscellaneous/Hack/Teleporter/PlayersNearby", "Players nearby");
            //AddEntry("Content/Miscellaneous/Hack/Teleporter/AllowRiskyTeleport", "Allow teleporting even with players nearby");
            //AddEntry("Content/Miscellaneous/Automation", "Automation");
            AddEntry("Content/Miscellaneous/Automation/Enabled", "활성화");
            //AddEntry("Content/Miscellaneous/Automation/FishForever", "Fish on repeat");
            AddEntry("Content/Miscellaneous/Automation/FishForever/Enabled", "활성화");
            //AddEntry("Content/Miscellaneous/Automation/FishForever/IgnoreLight", "Ignore light tugs");
            //AddEntry("Content/Miscellaneous/Automation/FishForever/IgnoreMedium", "Ignore medium tugs");
            //AddEntry("Content/Miscellaneous/Automation/FishForever/IgnoreHeavy", "Ignore heavy tugs");
            //AddEntry("Content/Miscellaneous/Automation/FishForever/UsePatience2", "Use Patience II");
            //AddEntry("Content/Miscellaneous/Automation/FishForever/UseMooch", "Use Mooch");
            //AddEntry("Content/Miscellaneous/Automation/FishForever/UseMooch2", "Use Mooch II");
            //AddEntry("Content/Miscellaneous/Automation/FishForever/UseThaliakFavor", "Use Thaliak's Favor");
            //AddEntry("Content/Miscellaneous/Automation/FishForever/ReleaseEverything", "Release everything");
            //AddEntry("Content/Miscellaneous/Automation/FishForever/Food", "Use food");
            AddEntry("Content/Miscellaneous/VisualEnhancement", "시각적 향상");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Enabled", "활성화");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox", "히트박스");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/Enabled", "활성화");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/HitboxColor", "히트박스 강조색");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/CastColor", "캐스팅 인디케이터 색");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/DrawOnEnemies", "적에게 표시하기");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/DrawOnPlayers", "플레이어에게 표시하기");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/OnlyCurrentTarget", "현재 타깃 대상에게만 표시하기");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/ShowCasts", "히트박스에 캐스팅 인디케이터 표시하기");
            AddEntry("Content/Debug/Debugger/ObjectMonitor", "오브젝트 모니터");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/Enabled", "활성화");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TextColor", "태그 글자색");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/ShowTextBg", "태그 배경 보기");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/BgColor", "태그 배경색");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TagPlayers", "플레이어 태그 보기");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TagEventObjs", "이벤트 오브잭트 태그 보기");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TagBattleNpcs", "전투 NPC 태그 보기");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TagOthers", "다른 지정되지 않은 유형에 대해 모두 태그 보기");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/OnlyVisible", "보이는 오브젝트만 보기");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/OnlyTargettable", "타깃 가능한 오브젝트만 보기");
            AddEntry("Content/Debug/Debugger/EventLogger", "이벤트 로거");
            AddEntry("Content/Debug/Debugger/EventLogger/Enabled", "활성화");
            AddEntry("Content/Debug/Debugger/EventLogger/LogInCombat", "전투 중인 경우 로그 기록");
            AddEntry("Content/Debug/Debugger/EventLogger/LogOutsideCombat", "비전투 상태에서 로그 기록");
            AddEntry("Content/Debug/Debugger/EventLogger/LogToDalamudLog", "Dalamud 로그로 출력");
            AddEntry("Content/Debug/Debugger/EventLogger/LogToFile", "파일로 출력");
            AddEntry("Content/Debug/Debugger/EventLogger/LogFilename", "로그 파일 이름");
            AddEntry("Content/Debug/Debugger/EventLogger/CurrentLogFilename", "현재 로그 파일");
            AddEntry("Content/Debug/Debugger/StressTest", "스트레스 테스트");
            AddEntry("Content/Debug/Debugger/StressTest/Enabled", "활성화");
            AddEntry("Content/Debug/Debugger/StressTest/TestAutomarkers", "오토마커 테스트");
            AddEntry("Content/Debug/Debugger/StressTest/TestAutomarkerRapidfire", "오토마커 빠른 설정/해제 테스트");
            AddEntry("Content/Debug/Debugger/StressTest/AmFails", "오토마커 오류");
            AddEntry("Content/Miscellaneous", "기타");
            AddEntry("Content/Miscellaneous/Enabled", "활성화");
            AddEntry("Content/Miscellaneous/Radar", "레이더");
            AddEntry("Content/Miscellaneous/Radar/Enabled", "활성화");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies", "적 강조하기");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/Enabled", "활성화");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/ObjectColor", "적 강조색");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/DrawLine", "가까운 적 강조");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/ShowNames", "네임 태그 보기");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/IncludeDistance", "네임 태그에서 대상과의 거리 보기");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/TextColor", "네임 태그 글자색");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/ShowNameBg", "네임 태그 배경 표시");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/BgColor", "네임 태그 배경색");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers", "플레이어 강조하기");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/Enabled", "활성화");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ObjectColor", "플레이어 강조색");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ShowNames", "네임 태그 보기");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/IncludeDistance", "네임 태그에서 대상과의 거리 보기");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/TextColor", "네임 태그 글자색");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ShowNameBg", "네임 태그 배경 표시");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/BgColor", "네임 태그 배경색");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ShowJobIcon", "직업 아이콘 보기");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ShowHpBar", "HP 막대 보기");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint", "채집 포인트 강조하기");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/Enabled", "활성화");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ObjectColor", "채집 포인트 강조색");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/OnlyOnGatherers", "채집 직업일 때만 보기");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowNames", "네임 태그 보기");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/IncludeDistance", "네임 태그에서 대상과의 거리 보기");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/TextColor", "네임 태그 글자색");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowNameBg", "네임 태그 배경 표시");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/BgColor", "네임 태그 배경색");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowHidden", "숨겨진 노드 보기");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/HiddenColor", "숨겨진 노드 강조색");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowNameOnHidden", "숨겨진 노드의 네임 태그 보기");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowNameBgOnHidden", "숨겨진 노드의 네임 태그 배경 표시");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder", "파인더");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/Enabled", "활성화");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LookFor", "찾을 대상");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LookFor/AddNew", "리스트에 추가");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LookFor/Remove", "선택 대상 삭제");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LookFor/Clear", "모두 삭제");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeRankS", "모든 S 랭크 마물 포함");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeRankA", "모든 A 랭크 마물 포함");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeRankB", "모든 B 랭크 마물 포함");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeIslandRare", "모든 무인도의 희귀 동물 포함");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/SoundAlert", "발견하면 소리로 알림");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/ObjectColor", "오브젝트 강조색");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/SRankColor", "S 랭크 강조색");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/ARankColor", "A 랭크 강조색");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/BRankColor", "B 랭크 강조색");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/RareAnimalColor", "희귀 동물 강조색");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/ShowNames", "네임 태그 표시");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeDistance", "네임 태그에 거리 표시");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/TextColor", "네임 태그 글자색");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/ShowNameBg", "네임 태그에 배경 표시");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/BgColor", "네임 태그 배경색");
            //AddEntry("Content/Miscellaneous/Radar/AlertFinder/LastSeen", "last seen");
            //AddEntry("Content/Miscellaneous/Radar/AlertFinder/Never", "never");
            AddEntry("Content/DeepDungeon", "딥 던전");
            AddEntry("Content/DeepDungeon/Enabled", "활성화");
            AddEntry("Content/DeepDungeon/AccursedHoard", "파묻힌 보물");
            AddEntry("Content/DeepDungeon/EurekaOrthos", "에우레카 오르토스");
            AddEntry("Content/DeepDungeon/EurekaOrthos/Enabled", "활성화");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies", "적 강조");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/Enabled", "활성화");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/ObjectColor", "적 강조색");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/DrawLine", "가까운 적 강조");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/ShowNames", "네임 태그 보기");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/IncludeDistance", "네임 태그에서 대상과의 거리 보기");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/TextColor", "네임 태그 글자색");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/ShowNameBg", "네임 태그 배경 표시");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/BgColor", "네임 태그 배경색");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons", "전송장치 강조");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/Enabled", "활성화");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/ObjectColor", "전송장치 강조색");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/ShowNames", "네임 태그 보기");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/IncludeDistance", "네임 태그에서 대상과의 거리 보기");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/TextColor", "네임 태그 글자색");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/ShowNameBg", "네임 태그 배경 표시");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/BgColor", "네임 태그 배경색");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests", "상자 및 파묻힌 보물 강조");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/Enabled", "활성화");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/GoldColor", "금 상자 색");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/SilverColor", "은 상자 색");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/BronzeColor", "동 상자 색");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/BandedColor", "일반 상자 색");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/HoardColor", "파묻힌 보물 색");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/ShowNames", "네임 태그 보기");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/IncludeDistance", "네임 태그에서 대상과의 거리 보기");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/TextColor", "네임 태그 글자색");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/ShowNameBg", "네임 태그 배경 표시");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/BgColor", "네임 태그 배경색");
            AddEntry("Content/DeepDungeon/HeavenOnHigh", "천궁탑");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/Enabled", "활성화");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies", "적 강조");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/Enabled", "활성화");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/ObjectColor", "적 강조색");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/DrawLine", "가까운 적 강조");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/ShowNames", "네임 태그 보기");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/IncludeDistance", "네임 태그에서 대상과의 거리 보기");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/TextColor", "네임 태그 글자색");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/ShowNameBg", "네임 태그 배경 표시");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/BgColor", "네임 태그 배경색");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons", "전송 등불 강조");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/Enabled", "활성화");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/ObjectColor", "전송 등불 강조색");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/ShowNames", "네임 태그 보기");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/IncludeDistance", "네임 태그에서 대상과의 거리 보기");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/TextColor", "네임 태그 글자색");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/ShowNameBg", "네임 태그 배경 표시");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/BgColor", "네임 태그 배경색");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests", "상자 및 파묻힌 보물 강조");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/Enabled", "활성화");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/GoldColor", "금 상자 색");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/SilverColor", "은 상자 색");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/BronzeColor", "동 상자 색");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/BandedColor", "일반 상자 색");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/HoardColor", "파묻힌 보물 색");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/ShowNames", "네임 태그 보기");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/IncludeDistance", "네임 태그에서 대상과의 거리 보기");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/TextColor", "네임 태그 글자색");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/ShowNameBg", "네임 태그 배경 표시");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/BgColor", "네임 태그 배경색");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead", "망자의 궁전");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/Enabled", "활성화");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies", "적 강조");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/Enabled", "활성화");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/ObjectColor", "적 강조색");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/DrawLine", "가까운 적 강조");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/ShowNames", "네임 태그 보기");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/IncludeDistance", "네임 태그에서 대상과의 거리 보기");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/TextColor", "네임 태그 글자색");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/ShowNameBg", "네임 태그 배경 표시");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/BgColor", "네임 태그 배경색");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons", "전송장치 강조");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/Enabled", "활성화");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/ObjectColor", "전송장치 강조색");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/ShowNames", "네임 태그 보기");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/IncludeDistance", "네임 태그에서 대상과의 거리 보기");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/TextColor", "네임 태그 글자색");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/ShowNameBg", "네임 태그 배경 표시");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/BgColor", "네임 태그 배경색");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests", "상자 및 파묻힌 보물 강조");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/Enabled", "활성화");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/GoldColor", "금 상자 색");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/SilverColor", "은 상자 색");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/BronzeColor", "동 상자 색");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/BandedColor", "일반 상자 색");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/HoardColor", "파묻힌 보물 색");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/ShowNames", "네임 태그 보기");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/IncludeDistance", "네임 태그에서 대상과의 거리 보기");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/TextColor", "네임 태그 글자색");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/ShowNameBg", "네임 태그 배경 표시");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/BgColor", "네임 태그 배경색");
            AddEntry("Content/Raid", "레이드");
            AddEntry("Content/Raid/Enabled", "활성화");
            AddEntry("Content/EndwalkerRaids", "효월의 종언 (6.x)");
            AddEntry("Content/EndwalkerRaids/Enabled", "활성화");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos", "연옥 (6.2)");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/Enabled", "활성화");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM", "(연영 3층) 마법각인 오토마커");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Enabled", "활성화");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs", "마커 설정");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/ShareTarget", "쉐어 대상");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Share1", "쉐어 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Share2", "쉐어 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Share3", "쉐어 3");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Spread1", "산개 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Spread2", "산개 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Spread3", "산개 3");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Spread4", "산개 4");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Prio", "우선 순위 설정");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Test", "할당 테스트 (우선 순위 고려)");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios", "천옥 (6.4)");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/Enabled", "활성화");
            //AddEntry("Content/Trial", "Trials");
            AddEntry("Content/Trial/Enabled", "활성화");
            AddEntry("Content/Ultimate", "절 토벌전");
            AddEntry("Content/Ultimate/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltUcob", "절 바하무트 토벌전");
            AddEntry("Content/Ultimate/UltUcob/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm", "(2 페이즈) 번개 오토마커");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Signs", "마커 설정");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Signs/Lightning1", "번개 1");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Signs/Lightning2", "번개 2");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Test", "할당 테스트 (우선 순위 고려)");
            AddEntry("Content/Ultimate/UltWeaponsRefrain", "절 알테마 웨폰 파괴작전");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM", "(3 페이즈) 타이탄 감옥 오토마커");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Signs", "마커 설정");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Signs/Gaol1", "감옥 1");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Signs/Gaol2", "감옥 2");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Signs/Gaol3", "감옥 3");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Prio", "우선 순위 설정");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Test", "할당 테스트 (우선 순위 고려)");
            AddEntry("Content/Ultimate/UltDragonsongReprise", "절 용시전쟁");
            AddEntry("Content/Ultimate/UltDragonsongReprise/Enabled", "활성화");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM", "(P2) Meteor Automaker");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs", "마커 설정");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/Meteor1", "Meteor 1");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/Meteor2", "Meteor 2");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/MeteorRole1", "Meteor role 1");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/MeteorRole2", "Meteor role 2");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/NonMeteor1", "Non-Meteor 1");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/NonMeteor2", "Non-Meteor 2");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/NonMeteor3", "Non-Meteor 3");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/NonMeteor4", "Non-Meteor 4");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Prio", "우선 순위 설정");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Test", "할당 테스트 (우선 순위 고려)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm", "(5 페이즈) 번개 오토마커");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Signs", "마커 설정");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Signs/Lightning1", "번개 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Signs/Lightning2", "번개 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Test", "할당 테스트 (우선 순위 고려)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM", "(6 페이즈) 사념의 불꽃 오토마커");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs", "마커 설정");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Presets/LPDU", "LPDU");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Presets/ElementalDC", "Elemental DC");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Stack1_1", "쉐어 1 (디버프 있음)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Stack1_2", "쉐어 1 (디버프 없음)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Stack2_1", "쉐어 2 (디버프 있음)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Stack2_2", "쉐어 2 (디버프 없음)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Spread1", "산개 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Spread2", "산개 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Spread3", "산개 3");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Spread4", "산개 4");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Prio", "우선 순위 설정");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Test", "할당 테스트 (우선 순위 고려)");
            AddEntry("Content/Ultimate/UltOmegaProtocol", "절 오메가 검증전");
            AddEntry("Content/Ultimate/UltOmegaProtocol/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega", "(1 페이즈/3 페이즈) 오메가 크기 줄이기");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/ApplyP1", "1 페이즈 오메가에 적용");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/SizeP1", "1 페이즈 오메가 크기:");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/ApplyP3", "3 페이즈 오메가에 적용");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/SizeP3", "3 페이즈 오메가 크기:");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM", "(1 페이즈) 순환 프로그램 오토마커");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs", "마커 설정");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs/Tower1", "다음 타워 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs/Tower2", "다음 타워 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs/Tether1", "다음 블래스터 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs/Tether2", "다음 블래스터 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Prio", "우선 순위 설정");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Test", "랜덤 할당 테스트");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM", "(1 페이즈) 전지전능 오토마커");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs", "마커 설정");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs/Beam1", "다음 파동포 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs/Beam2", "다음 파통포 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs/Missile1", "다음 미사일 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs/Missile2", "다음 미사일 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Prio", "우선 순위 설정");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Test", "랜덤 할당 테스트");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether", "(2 페이즈/5 페이즈) 붙어라/멀어져라 거리 인디케이터");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/TetherOkColor", "안전권 내의 색");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/TetherSafeColor", "안전한 거리의 색");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/TetherNokColor", "틀린 거리의 색");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/Test", "가까운 전투 대상에게 랜덤으로 선을 할당하여 테스트");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM", "(2 페이즈) 파티 시너지 오토마커");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs", "Marker configuration for Remote Glitch");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/Presets/BPOG - GPOB", "BPOG - GPOB");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/Presets/BPOG - GOPB", "BPOG - GOPB");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/CrossL", "엑스 (왼쪽)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/CrossR", "엑스 (오른쪽)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/SquareL", "네모 (왼쪽)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/SquareR", "네모 (오른쪽)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/CircleL", "동그라미 (왼쪽)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/CircleR", "동그라미 (오른쪽)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/TriangleL", "세모 (왼쪽)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/TriangleR", "세모 (오른쪽)");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2", "Marker configuration for Mid Glitch");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/Presets/BPOG - BPOG", "BPOG - BPOG");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/CrossL", "엑스 (왼쪽)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/CrossR", "엑스 (오른쪽)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/SquareL", "네모 (왼쪽)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/SquareR", "네모 (오른쪽)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/CircleL", "동그라미 (왼쪽)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/CircleR", "동그라미 (오른쪽)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/TriangleL", "세모 (왼쪽)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/TriangleR", "세모 (오른쪽)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Prio", "우선 순위 설정");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Test", "랜덤 할당 테스트");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM", "(P3) Transition automarker");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs", "마커 설정");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Stack1_1", "쉐어 1 (디버프 있음)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Stack1_2", "쉐어 1 (디버프 없음)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Stack2_1", "쉐어 2 (디버프 있음)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Stack2_2", "쉐어 2 (디버프 없음)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Spread1", "산개 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Spread2", "산개 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Spread3", "산개 3");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Spread4", "산개 4");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Prio", "우선 순위 설정");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Test", "랜덤 할당 테스트");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM", "(3 페이즈) 모니터 오토마커");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs", "마커 설정");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/Monitor1", "모니터 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/Monitor2", "모니터 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/Monitor3", "모니터 3");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None1", "무징 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None2", "무징 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None3", "무징 3");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None4", "무징 4");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None5", "무징 5");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Prio", "우선 순위 설정");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Test", "랜덤 할당 테스트");
            AddEntry("Content/Ultimate/UltOmegaProtocol/HelloWorldDrawBossMonitor", "(3 페이즈) 보스 모니터 강조");
            AddEntry("Content/Ultimate/UltOmegaProtocol/HelloWorldDrawBossMonitor/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltOmegaProtocol/HelloWorldDrawBossMonitor/HighlightColor", "강조색");
            AddEntry("Content/Ultimate/UltOmegaProtocol/HelloWorldDrawBossMonitor/Test", "오버레이 테스트");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM", "(5 페이즈) 코드:**미* (델타) 오토마커");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs", "마커 설정");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs/Presets/LPDU", "LPDU / Sausage");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs/Presets/ElementalDC", "Elemental DC");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs/DistantWorld", "헬로월드: 원거리");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs/NearWorld", "헬로월드: 근거리");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Test", "랜덤 할당 테스트");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaDrawBossMonitor", "(5 페이즈) 코드:**미* (델타) 보스 모니터 강조");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaDrawBossMonitor/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaDrawBossMonitor/HighlightColor", "강조색");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaDrawBossMonitor/Test", "오버레이 테스트");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM", "(P5) 코드: **미* (시그마) 오토마커");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs", "마커 설정");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/Presets/LPDU", "LPDU / Sausage");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/Presets/ElementalDC", "Elemental DC");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/Arm1", "Arm Bait 1");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/Arm2", "Arm Bait 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/DistantWorld", "핼로월드: 원거리");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/NearWorld", "핼로월드: 근거리");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/DistantFarBait", "Distant Far Bait");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/DistantCloseBait", "Distant Close Bait");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/NearBait1", "Near World Bait 1");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/NearBait2", "Near World Bait 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Prio", "우선 순위 설정");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Test", "랜덤 할당 테스트");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM", "(5 페이즈) 코드: **미* (오메가) 오토마커");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/SelfMarkOnly", "나에게만 징 달기");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/AsSoftmarker", "클라이언트 측의 소프트 마커 사용하기");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs", "마커 설정");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Presets/LPDU", "LPDU / Sausage");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Monitor1", "Monitor / Tether 1");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Monitor2", "Monitor / Tether 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/DistantWorld", "핼로월드: 원거리");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/NearWorld", "핼로월드: 근거리");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Bait1", "Bait 1");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Bait2", "Bait 2");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Bait3", "Bait 3");
            //AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Bait4", "Bait 4");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Prio", "우선 순위 설정");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Test", "랜덤 할당 테스트");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaDrawBossMonitor", "(5 페이즈) 코드: **미* (오메가) 보스 모니터 강조");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaDrawBossMonitor/Enabled", "활성화");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaDrawBossMonitor/HighlightColor", "강조색");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaDrawBossMonitor/Test", "오버레이 테스트");
            #endregion
            #region RSV abilities
            //AddEntry("RSV/Ability_33127", "Front Combination");
            //AddEntry("RSV/Ability_33128", "Front Combination");
            //AddEntry("RSV/Ability_33129", "Rear Combination");
            //AddEntry("RSV/Ability_33130", "Rear Combination");
            //AddEntry("RSV/Ability_33211", "Chimeric Succession");
            //AddEntry("RSV/Ability_33254", "Jury Overruling");
            //AddEntry("RSV/Ability_33255", "Jury Overruling");
            //AddEntry("RSV/Ability_33256", "Jury Overruling");
            //AddEntry("RSV/Ability_33257", "Jury Overruling");
            //AddEntry("RSV/Ability_33260", "Divisive Overruling");
            //AddEntry("RSV/Ability_33261", "Divisive Overruling");
            //AddEntry("RSV/Ability_33262", "Divisive Overruling");
            //AddEntry("RSV/Ability_33266", "Upheld Overruling");
            //AddEntry("RSV/Ability_33267", "Upheld Overruling");
            //AddEntry("RSV/Ability_33293", "Arcane Revelation");
            //AddEntry("RSV/Ability_33294", "Arcane Revelation");
            //AddEntry("RSV/Ability_33295", "Arcane Revelation");
            //AddEntry("RSV/Ability_33296", "Arcane Revelation");
            //AddEntry("RSV/Ability_33297", "Twofold Revelation");
            //AddEntry("RSV/Ability_33298", "Twofold Revelation");
            //AddEntry("RSV/Ability_33407", "Steel Web");
            //AddEntry("RSV/Ability_33441", "Dæmoniac Bonds");
            //AddEntry("RSV/Ability_33442", "Dæmoniac Bonds");
            //AddEntry("RSV/Ability_33443", "Duodæmoniac Bonds");
            //AddEntry("RSV/Ability_33498", "Superchain Theory I");
            //AddEntry("RSV/Ability_33501", "Superchain Radiation");
            //AddEntry("RSV/Ability_33502", "Superchain Emission");
            //AddEntry("RSV/Ability_33521", "Searing Radiance");
            //AddEntry("RSV/Ability_33522", "Shadowsear");
            //AddEntry("RSV/Ability_33534", "Apodialogos");
            //AddEntry("RSV/Ability_33535", "Peridialogos");
            //AddEntry("RSV/Ability_33536", "Apodialogos");
            //AddEntry("RSV/Ability_33537", "Peridialogos");
            //AddEntry("RSV/Ability_33542", "Theos's Holy");
            //AddEntry("RSV/Ability_33543", "Polarized Ray");
            //AddEntry("RSV/Ability_33544", "Umbral Impact");
            //AddEntry("RSV/Ability_33545", "Astral Impact");
            //AddEntry("RSV/Ability_33546", "Theos's Cross");
            //AddEntry("RSV/Ability_33547", "Theos's Saltire");
            //AddEntry("RSV/Ability_33548", "Umbral Glow");
            //AddEntry("RSV/Ability_33549", "Astral Glow");
            //AddEntry("RSV/Ability_33550", "Umbral Advance");
            //AddEntry("RSV/Ability_33551", "Astral Advance");
            //AddEntry("RSV/Ability_33552", "Unmitigated Explosion");
            //AddEntry("RSV/Ability_33553", "Unmitigated Explosion");
            //AddEntry("RSV/Ability_33554", "Shock");
            //AddEntry("RSV/Ability_33555", "Electrify");
            //AddEntry("RSV/Ability_33559", "Crush Helm");
            //AddEntry("RSV/Ability_33560", "Crush Helm");
            //AddEntry("RSV/Ability_33561", "Crush Helm");
            //AddEntry("RSV/Ability_33562", "Palladian Grasp");
            //AddEntry("RSV/Ability_33563", "Palladian Grasp");
            //AddEntry("RSV/Ability_33564", "Palladian Grasp");
            //AddEntry("RSV/Ability_33565", "Palladian Grasp");
            //AddEntry("RSV/Ability_33566", "Ekpyrosis");
            //AddEntry("RSV/Ability_33567", "Ekpyrosis");
            //AddEntry("RSV/Ability_33568", "Ekpyrosis");
            //AddEntry("RSV/Ability_33569", "Ekpyrosis");
            //AddEntry("RSV/Ability_33570", "Ekpyrosis");
            //AddEntry("RSV/Ability_33571", "Palladian Ray");
            //AddEntry("RSV/Ability_33572", "Palladian Ray");
            //AddEntry("RSV/Ability_33573", "Palladian Ray");
            //AddEntry("RSV/Ability_33574", "Gaiaochos");
            //AddEntry("RSV/Ability_33575", "Demi Parhelion");
            //AddEntry("RSV/Ability_33576", "Demi Parhelion");
            //AddEntry("RSV/Ability_33577", "Geocentrism");
            //AddEntry("RSV/Ability_33578", "Geocentrism");
            //AddEntry("RSV/Ability_33579", "Geocentrism");
            //AddEntry("RSV/Ability_33580", "Demi Parhelion");
            //AddEntry("RSV/Ability_33581", "Demi Parhelion");
            //AddEntry("RSV/Ability_33582", "Divine Excoriation");
            //AddEntry("RSV/Ability_33583", "Summon Darkness");
            //AddEntry("RSV/Ability_33584", "Ultima Ray");
            //AddEntry("RSV/Ability_33585", "The Classical Concepts");
            //AddEntry("RSV/Ability_33586", "Fusion Burst");
            //AddEntry("RSV/Ability_33587", "Implode");
            //AddEntry("RSV/Ability_33588", "Aspect Effect");
            //AddEntry("RSV/Ability_33589", "Tilted Balance");
            //AddEntry("RSV/Ability_33590", "Panta Rhei");
            //AddEntry("RSV/Ability_33591", "Panta Rhei");
            //AddEntry("RSV/Ability_33592", "Caloric Theory");
            //AddEntry("RSV/Ability_33593", "Unmitigated Explosion");
            //AddEntry("RSV/Ability_33594", "Pyre Pulse");
            //AddEntry("RSV/Ability_33595", "Dynamic Atmosphere");
            //AddEntry("RSV/Ability_33596", "Entropic Excess");
            //AddEntry("RSV/Ability_33597", "Caloric Theory");
            //AddEntry("RSV/Ability_33598", "Caloric Theory");
            //AddEntry("RSV/Ability_33599", "Pangenesis");
            //AddEntry("RSV/Ability_33600", "Biochemical Factor");
            //AddEntry("RSV/Ability_33601", "Ex-factor");
            //AddEntry("RSV/Ability_33602", "Pantheos");
            //AddEntry("RSV/Ability_33603", "Umbral Advent");
            //AddEntry("RSV/Ability_33604", "Astral Advent");
            //AddEntry("RSV/Ability_33605", "Unmitigated Explosion");
            //AddEntry("RSV/Ability_33606", "Unmitigated Explosion");
            //AddEntry("RSV/Ability_33607", "Factor In");
            //AddEntry("RSV/Ability_33608", "Ultima Blow");
            //AddEntry("RSV/Ability_33609", "Ignorabimus");
            //AddEntry("RSV/Ability_33616", "Polarized Glow");
            //AddEntry("RSV/Ability_33620", "Demi Parhelion");
            //AddEntry("RSV/Ability_34134", "Theos's Ultima");
            //AddEntry("RSV/Ability_34182", "Missing Link");
            //AddEntry("RSV/Ability_34434", "Ultima");
            //AddEntry("RSV/Ability_34435", "Ekpyrosis");
            //AddEntry("RSV/Ability_34550", "Ultima");
            //AddEntry("RSV/Ability_34554", "Superchain Theory IIA");
            //AddEntry("RSV/Ability_34555", "Superchain Theory IIB");
            //AddEntry("RSV/Ability_34557", "Pyre Pulse");
            //AddEntry("RSV/Ability_34595", "Steel Web");
            //AddEntry("RSV/Ability_34596", "Pandæmoniac Web");
            //AddEntry("RSV/Ability_34692", "Dismissal Overruling");
            //AddEntry("RSV/Ability_34693", "Dismissal Overruling");
            //AddEntry("RSV/Ability_34694", "Dismissal Overruling");
            //AddEntry("RSV/Ability_34695", "Dismissal Overruling");
            //AddEntry("RSV/Ability_34702", "Front Firestrikes");
            //AddEntry("RSV/Ability_34703", "Rear Firestrikes");
            //AddEntry("RSV/Ability_34706", "Caloric Theory");
            //AddEntry("RSV/Ability_34719", "Gaiaochos");
            //AddEntry("RSV/Ability_34720", "Ultima");
            //AddEntry("RSV/Ability_34734", "Tetradæmoniac Bonds");
            //AddEntry("RSV/Ability_34735", "Pandæmoniac Turrets");
            //AddEntry("RSV/Ability_34739", "Divisive Overruling");
            //AddEntry("RSV/Ability_34740", "Divisive Overruling");
            //AddEntry("RSV/Ability_34741", "Divisive Overruling");
            //AddEntry("RSV/Ability_34771", "Upheld Overruling");
            //AddEntry("RSV/Ability_34772", "Upheld Overruling");
            #endregion
        }

    }

}