using Lemegeton.Core;

namespace Lemegeton.Language
{

    internal class Japanese : Core.Language
    {

        public override bool IsDefault => false;
        public override string LanguageName => "日本語";
        public override bool FontDownloadNecessary => false;
        public override string FontDownload => null;
        public override GlyphRangeEnum GlyphRange => GlyphRangeEnum.Undefined;

        public Japanese(State st) : base(st)
        {
            #region 1.0.7.4
            //AddEntry("Changelog/1.0.7.4", " New troubleshooting feature to help with problems\n Adjustments to TEA automarkers");
            //AddEntry("Status/Troubleshooting", "Troubleshooting");
            //AddEntry("Troubleshooting/Title", "Lemegeton Troubleshooting");
            //AddEntry("Troubleshooting/Intro", "If you have encountered a problem with Lemegeton and something is not working as it should, please follow these instructions to collect some information and report the issue. This is most valuable when done within 30 minutes of the problem occurring, as details of the issue is still stored within memory.");
            //AddEntry("Troubleshooting/Step1", "Press this button to generate a zip archive that contains your dalamud.log, your Lemegeton configuration, and some Lemegeton internal information from the last 30 minutes. This information will help greatly when trying to sort out the issue.");
            //AddEntry("Troubleshooting/Step1Button", "Generate package");
            //AddEntry("Troubleshooting/Step1Working", "Generating package...");
            //AddEntry("Troubleshooting/Step1Done", "Your package has been generated and can be found at:");
            //AddEntry("Troubleshooting/Step1Error", "An error occurred while trying to generate your package.");
            //AddEntry("Troubleshooting/CopyToClipboard", "Copy filename to clipboard");
            //AddEntry("Troubleshooting/Step2", "To use that package, make note of the filename as you'll need it soon, and join the Lemegeton Discord server by hitting the Discord button below, and follow the instructions pinned in channel #lemmy_questions.");
            //AddEntry("Troubleshooting/Outro", "Your reports and logs help locate and fix issues rapidly - thank you for helping out!");
            #endregion
            #region 1.0.6.9
            //AddEntry("Changelog/1.0.6.9", " 7.3 fixes");
            #endregion
            #region 1.0.6.8
            //AddEntry("Changelog/1.0.6.8", " Dalamud API 13");
            #endregion
            #region 1.0.6.7
            //AddEntry("Changelog/1.0.6.7", " Quick bugfix");
            #endregion
            #region 1.0.6.6
            //AddEntry("Changelog/1.0.6.6", " Quick bugfix");
            #endregion
            #region 1.0.6.5
            //AddEntry("Changelog/1.0.6.5", " Added automarker for M6s Soul Sugar\n Added indicator for M8s Moonbeam cleaves");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser", "AAC Cruiserweight (7.2)");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/Enabled", "Enabled");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm", "(M6s) Soul Sugar automarker");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Enabled", "Enabled");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set1", "First set");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set2", "Second set");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set3", "Third set");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set4", "Fourth set");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set1/Yan", "Yan");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set1/GimmeCat", "Gimme Cat");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set1/Mu1", "Mu #1");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set1/Mu2", "Mu #2");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set2/MantaW", "Feather Ray (W)");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set2/MantaE", "Feather Ray (E)");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set2/Mu1", "Mu #1");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set2/Mu2", "Mu #2");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set3/Yan", "Yan");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set3/Jabberwock", "Jabberwock");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set3/GimmeCat", "Gimme Cat");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set4/Yan", "Yan");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set4/Jabberwock", "Jabberwock");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set4/GimmeCat", "Gimme Cat");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set4/MantaW", "Feather Ray (W)");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set4/MantaE", "Feather Ray (E)");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set4/Mu1", "Mu #1");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Set4/Mu2", "Mu #2");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/SoulSugarAm/Test", "Test random assignment");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/DrawMoonbeam", "(M8s) Moonbeam cleave indicator");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/DrawMoonbeam/Enabled", "Enabled");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/DrawMoonbeam/EarlyHighlightColor", "Early warning color");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/DrawMoonbeam/SoonHighlightColor", "Danger warning color");
            //AddEntry("Content/DawntrailRaids/DTRaidCruiser/DrawMoonbeam/Test", "Test indicator");
            #endregion
            #region 1.0.6.4
            //AddEntry("Changelog/1.0.6.4", " Fixes for new Dalamud");
            #endregion
            #region 1.0.6.3
            //AddEntry("Changelog/1.0.6.3", " Dalamud API 12 + NET 9 update");
            #endregion
            #region 1.0.6.2
            //AddEntry("Changelog/1.0.6.2", " Added automarker for FRU P4 Crystallize Time");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM", "(P4) Crystallize Time automarker");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs/Aero1", "Aero 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs/Aero2", "Aero 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs/RedBlizzard1", "Red Blizzard 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs/RedBlizzard2", "Red Blizzard 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs/Fire", "Dark Eruption (Fire)");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs/BlueBlizzard", "Blue Blizzard");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs/Water", "Dark Water");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Signs/Earth", "Unholy Darkness (Earth)");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Prio", "Priority configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CrystallizeTimeAM/Test", "Test random assignment");
            #endregion
            #region 1.0.6.1
            //AddEntry("Changelog/1.0.6.1", " Added Crystallize Time indicators\n Added Ryne & Gaia HP difference indicator");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CTIndicator", "(P4) Crystallize Time indicators");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CTIndicator/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CTIndicator/Hourglasses", "Highlight exploding hourglasses");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CTIndicator/Cleanses", "Highlight cleanses");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CTIndicator/Corner", "Highlight knockback corner");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CTIndicator/ExplodingHourglassColor", "Hourglass highlight color");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/CTIndicator/Test", "Test display");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DoubleTrouble", "(P4) Usurper & Oracle HP difference indicator");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DoubleTrouble/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DoubleTrouble/Area", "Overlay configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DoubleTrouble/Test", "Test on self and closest enemy");
            #endregion
            #region 1.0.6.0
            //AddEntry("Changelog/1.0.6.0", " Added JP box strategy for FRU P2 Light Rampant automarker (old one is EU/NA)");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Strategy/BoxJP", "Box 4/4 (JP)");
            #endregion
            #region 1.0.5.9
            //AddEntry("Changelog/1.0.5.9", " Some quick fixes");
            #endregion
            #region 1.0.5.8         
            //AddEntry("Changelog/1.0.5.8", " Added automarker for FRU P3 Ultimate Relativity\n Added automarker for FRU P3 Dark Water");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM", "(P3) Dark Water automarker");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs/Water10_1", "Short 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs/Water10_2", "Short 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs/Water29_1", "Mid 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs/Water29_2", "Mid 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs/Water38_1", "Long 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs/Water38_2", "Long 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs/Nothing_1", "Nothing 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Signs/Nothing_2", "Nothing 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Prio", "Priority configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/DarkWaterAM/Test", "Test random assignment");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM", "(P3) Ultimate Relativity automarker");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/Support10", "Support 10");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/Support20", "Support 20");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/Support30_1", "Support 30 #1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/Support30_2", "Support 30 #2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/SupportIce", "Support Ice");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/Dps10_1", "DPS 10 #1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/Dps10_2", "DPS 10 #2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/Dps20", "DPS 20");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/Dps30", "DPS 30");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Signs/DpsIce", "DPS Ice");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Prio", "Priority configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/UltimateRelativityAM/Test", "Test random assignment");
            #endregion
            #region 1.0.5.7
            //AddEntry("Changelog/1.0.5.7", " Additional fixes to FRU P2 Light Rampant\n Added box strategy for FRU P2 Light Rampant automarker");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Strategy/Box", "Box 4/4 (EU/NA)");
            #endregion
            #region 1.0.5.6
            //AddEntry("Changelog/1.0.5.6", " Fixes to FRU P2 Light Rampant");
            #endregion
            #region 1.0.5.5
            //AddEntry("Changelog/1.0.5.5", " Added AB1234 strategy for FRU P2 Light Rampant automarker");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Strategy", "Solver strategy");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Strategy/Generic", "Seal of Orichalcos (Generic)");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Strategy/AB1234", "AB1234");
            #endregion
            #region 1.0.5.4
            //AddEntry("Changelog/1.0.5.4", " Added automarker for FRU P2 Light Rampant\n Added a new 'Clockspots' priority configuration method, available for all AMs");
            //AddEntry("Automarker/PrioType/Clockspots", "Clockspots");
            //AddEntry("Automarker/PrioType/Clockspots/StartingFrom", "Select priority starting point");
            //AddEntry("Automarker/PrioType/Clockspots/Reversed", "Sort counter-clockwise instead of clockwise");
            //AddEntry("Automarker/PrioDirection/N", "N");
            //AddEntry("Automarker/PrioDirection/NE", "NE");
            //AddEntry("Automarker/PrioDirection/NW", "NW");
            //AddEntry("Automarker/PrioDirection/E", "E");
            //AddEntry("Automarker/PrioDirection/W", "W");
            //AddEntry("Automarker/PrioDirection/SE", "SE");
            //AddEntry("Automarker/PrioDirection/SW", "SW");
            //AddEntry("Automarker/PrioDirection/S", "S");
            #endregion
            #region 1.0.5.3
            //AddEntry("Changelog/1.0.5.3", " Fixes to FRU P1 Fall of Faith");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM", "(P2) Light Rampant automarker");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs", "Marker configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs/TowerN", "Tower ↑");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs/TowerNE", "Tower ↗");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs/TowerSE", "Tower ↘");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs/TowerS", "Tower ↓");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs/TowerSW", "Tower ↙");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs/TowerNW", "Tower ↖");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs/Puddle1", "Puddle 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Signs/Puddle2", "Puddle 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Prio", "Priority configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/LightRampantAM/Test", "Test random assignment");
            #endregion
            #region 1.0.5.2
            //AddEntry("Changelog/1.0.5.2", " Added automarker for FRU P1 Fall of Faith");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM", "(P1) Fall of Faith automarker");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs", "Marker configuration");            
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs/Tether1", "Tether 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs/Tether2", "Tether 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs/Tether3", "Tether 3");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs/Tether4", "Tether 4");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs/Overflow1", "Overflow 1");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs/Overflow2", "Overflow 2");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs/Overflow3", "Overflow 3");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Signs/Overflow4", "Overflow 4");            
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Prio", "Priority configuration");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/FallOfFaithAM/Test", "Test random assignment");
            #endregion
            #region 1.0.5.1
            //AddEntry("Changelog/1.0.5.1", " DSR Dragon HP indicator now much more configurable\n additional minor housekeeping");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/DoubleDragons/Area", "Overlay configuration");
            //AddEntry("Overlay/Settings/BackgroundColor", "Background color");
            //AddEntry("Overlay/Settings/Padding", "Padding");
            #endregion
            #region 1.0.5.0            
            //AddEntry("Changelog/1.0.5.0", " minor housekeeping updates");
            #endregion
            #region 1.0.4.9
            //AddEntry("Changelog/1.0.4.9", " fixed automarker issues with blacklisted characters\n Dalamud API11 update");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/DrawSidewiseSpark", "(M4s) Sidewise Spark indicator");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/DrawSidewiseSpark/Enabled", "Enabled");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/DrawSidewiseSpark/HighlightColor", "Sidewise Spark indicator color");
            //AddEntry("Content/Ultimate/UltFuturesRewritten", "Futures Rewritten (Ultimate)");
            //AddEntry("Content/Ultimate/UltFuturesRewritten/Enabled", "Enabled");
            #endregion
            #region 1.0.4.8
            //AddEntry("Changelog/1.0.4.8", " fixed a problem where minions could not be marked\n Radar\\Finder can now handle regular expressions as well\n added missing Kozama'uka S ranks to Radar\\Finder");
            //AddEntry("PatternType/RegularExpressionShort", "Regex");
            #endregion
            #region 1.0.4.7
            //AddEntry("Changelog/1.0.4.7", " Radar/Finder can now point out special FATE targets");
            //AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeFateSpecial", "Include special FATE targets");
            //AddEntry("Content/Miscellaneous/Radar/AlertFinder/FateSpecialColor", "Special FATE target highlight color");
            #endregion
            #region 1.0.4.6
            //AddEntry("Changelog/1.0.4.6", " small fix to M2s Alarm Pheromones angles");
            #endregion
            #region 1.0.4.5
            //AddEntry("Changelog/1.0.4.5", " added indicator for M2s Alarm Pheromones");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/Groupbees", "(M2s) Alarm Pheromones indicator");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/Groupbees/Enabled", "Enabled");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/Groupbees/Test", "Test through the center");
            #endregion
            #region 1.0.4.4
            //AddEntry("Changelog/1.0.4.4", " fixes and better uptime strategy for M4s Electrical Condenser AM");
            #endregion
            #region 1.0.4.3
            //AddEntry("Changelog/1.0.4.3", " added AM for M4s Electrical Condenser");
            //AddEntry("Content/DawntrailRaids", "Dawntrail (7.x)");
            //AddEntry("Content/DawntrailRaids/Enabled", "Enabled");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy", "AAC Light-heavyweight (7.0)");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/Enabled", "Enabled");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM", "(M4s) Electrical Condenser automarker");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Enabled", "Enabled");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/SelfMarkOnly", "Self-marking only");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/AsSoftmarker", "Show as client-side soft markers");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs", "Electrical Condenser spreads");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2", "Four Star pairs");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Prio", "Priority configuration");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Test", "Test random assignment");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs/DPS2", "DPS 2 charge");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs/DPS3", "DPS 3 charge");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs/Support2", "Support 2 charge");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs/Support3", "Support 3 charge");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2/Pair1_S", "Short #1");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2/Pair2_S", "Short #2");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2/Pair3_S", "Short #3");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2/Pair4_S", "Short #4");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2/Pair1_L", "Long #1");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2/Pair2_L", "Long #2");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2/Pair3_L", "Long #3");
            //AddEntry("Content/DawntrailRaids/DTRaidLightHeavy/CondenserAM/Signs2/Pair4_L", "Long #4");
            #endregion
            #region 1.0.4.2            
            //AddEntry("Changelog/1.0.4.2", " added all the missing A/B ranks for Dawntrail");
            #endregion
            #region 1.0.4.1
            //AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeHP", "Include HP % on the name tag");
            //AddEntry("Changelog/1.0.4.1", " added an option to show HP % on the name tag of Radar/Finder");
            #endregion
            #region 1.0.4.0
            //AddEntry("MainMenu/Changelog", "Updates");
            //AddEntry("Notifications/Settings/ShortcutScale", "Shortcut icon scale");
            //AddEntry("Changelog/SinceYourLastUpdate", "Updates since your last version");
            //AddEntry("Changelog/Version", "Version");
            //AddEntry("Changelog/Description", "Description");
            //AddEntry("Changelog/1.0.4.0", " added all new Dawntrail hunts (S, A, B ranks) to Radar\n added an option to resize shortcut icon\n added a change log");
            #endregion
            #region 1.0.3.6
            AddEntry("Job/VPR", "ヴァイパー");
            AddEntry("Job/PCT", "ピクトマンサー");
            #endregion
            #region 1.0.3.2
            //AddEntry("Timelines/TimelineSelector", "Open timeline selector");
            //AddEntry("Timelines/TimelineSelector/WindowTitle", "Lemegeton timeline selector");
            //AddEntry("Timelines/TimelineSelector/SelectionInfo", "By default, Lemegeton will select the most recently edited timeline file it can find for a specific zone. You can add zone-specific overrides to make it always use the same timeline file. Please note that timeline reactions are generally tied to a specific timeline file.");
            //AddEntry("Timelines/TimelineSelector/ColZoneID", "ID");
            //AddEntry("Timelines/TimelineSelector/ColZoneName", "Zone name");
            //AddEntry("Timelines/TimelineSelector/ColZoneFile", "Timeline file in use");
            //AddEntry("Timelines/TimelineSelector/ChangeTimelineFile", "Change timeline file");
            //AddEntry("Timelines/TimelineSelector/DeleteOverride", "Remove timeline override");
            //AddEntry("Timelines/TimelineSelector/SelTypeAutomatic", "Selected automatically");
            //AddEntry("Timelines/TimelineSelector/SelTypeOverride", "Overridden manually");
            //AddEntry("Timelines/TimelineSelector/SelectTimelineFile", "Select timeline file to use for '{0}'");
            //AddEntry("Timelines/TimelineSelector/SelectTimelineFileUnspecified", "Select timeline file to add");
            //AddEntry("Timelines/TimelineSelector/AddTimelineFile", "Add timeline file");
            #endregion
            #region 1.0.3.1
            //AddEntry("Content/Ultimate/UltDragonsongReprise/DoubleDragons", "(P6) Dragon HP difference indicator");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/DoubleDragons/Enabled", "Enabled");
            //AddEntry("Content/Ultimate/UltDragonsongReprise/DoubleDragons/Test", "Test on self and closest enemy");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar", "Enemy cast bar");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/Enabled", "Enabled");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/CastColor", "Cast bar color");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/WarningColor", "Cast bar time warning color");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/InterruptColor", "Interrupt highlight color");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/CastbarVisuals", "Cast bar visual configuration");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/CastbarVisuals/WarningThreshold", "Cast time warning threshold in seconds");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/CastbarVisuals/BarWidth", "Cast bar width");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/CastbarVisuals/BarHeight", "Cast bar height");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/CastbarVisuals/FontSize", "Text size");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/CastbarVisuals/BarOffsetWorld", "Cast bar offset in world coordinates");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/CastbarVisuals/BarOffsetScreen", "Cast bar offset in screen coordinates");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/OnlyCurrentTarget", "Draw only for current target");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/OnlyTargettable", "Draw only for targettable entities");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/ShowCastName", "Show ability name on cast bar");
            //AddEntry("Content/Miscellaneous/VisualEnhancement/Castbar/ShowCastTime", "Show remaining time on cast bar");
            #endregion
            #region 1.0.2.9
            AddEntry("Content/Criterion/EwCritAloalo/StaticePresentTether", "スターチス プレゼントボックス線インジケーター");
            AddEntry("Content/Criterion/EwCritAloalo/StaticePresentTether/Enabled", "有効");
            AddEntry("Content/Criterion/EwCritAloalo/StaticePresentTether/TetherColor", "線の色を追加");
            AddEntry("Content/Criterion/EwCritAloalo/StaticePresentTether/Test", "プレイヤーにランダムな弾丸をテスト");
            AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM", "ダーツ&ローテーション オートマーカー");
            AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/Enabled", "有効");
            AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/Signs", "マーカー設定");
            AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/Signs/Enumeration", "カウント");
            AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/Signs/Chain1", "鎖 1");
            AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/Signs/Chain2", "鎖 2");
            AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/Signs/Nothing", "無職");
            AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/Prio", "優先度設定");
            AddEntry("Content/Criterion/EwCritAloalo/StaticePinwheelAM/Test", "割り振りテスト");
            AddEntry("Content/Debug/Debugger/EventLogger/LogActorControl", "ActorControlメッセージを記録する");
            #endregion
            #region 1.0.2.8
            AddEntry("MainMenu/Settings/AutomarkerHistorySoftmarker", "(ソフトマーカー)");
            AddEntry("MainMenu/Settings/AutomarkerHistoryRemoved", "(削除)");
            AddEntry("MainMenu/Settings/AutomarkerHistory", "マーカー変更履歴");
            AddEntry("MainMenu/Settings/AutomarkerHistoryIntro", "ここには、過去100回のマーカーの変更が時系列順に表示されます。これには他のプレーヤーが設定した(または解除した)マーカーも含まれ、他のプレーヤーが競合するマーカーを有効にしていないかどうかを簡単に確認することができます。");
            AddEntry("Content/Debug/Debugger/EventLogger/MonitorOmen", "前兆の変化を監視する");
            AddEntry("Content/Debug/Debugger/EventLogger/MonitorVFX", "VFXの変化を監視する");
            #endregion
            #region 1.0.2.7
            AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM", "未来観測 α オートマーカー");
            AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs/SharedSentence", "集団罰");
            AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs/Defamation", "名誉罰");
            AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs/Aggravated1", "加重罰 1");
            AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs/Aggravated2", "加重罰 2");
            AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs/Aggravated3", "加重罰 3");
            AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs/Nothing1", "無職 1");
            AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs/Nothing2", "無職 2");
            AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Signs/Nothing3", "無職 3");
            AddEntry("Content/Ultimate/UltAlexander/FateAlphaAM/Test", "割り振りテスト");
            AddEntry("Content/Ultimate/UltAlexander/FateBetaAM", "未来観測 β オートマーカー");
            AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs/LightRestraining", "接触禁止 接近禁止");
            AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs/DarkRestraining", "逃亡禁止 接近禁止");
            AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs/LightHouseArrest", "接触禁止 接近強制");
            AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs/DarkHouseArrest", "逃亡禁止 接近強制");
            AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs/LightShared", "接触禁止 集団罰");
            AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs/DarkNothing", "逃亡禁止 無職");
            AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs/LightBeacon", "接触保護");
            AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Signs/DarkBeacon", "逃亡監察");
            AddEntry("Content/Ultimate/UltAlexander/FateBetaAM/Test", "割り振りテスト");
            #endregion
            #region 1.0.2.6
            AddEntry("Content/Ultimate/UltAlexander", "絶アレキサンダー討滅戦");
            AddEntry("Content/Ultimate/UltAlexander/Enabled", "有効");
            AddEntry("Content/Ultimate/UltAlexander/LimitCutAM", "リミッターカット オートマーカー");
            AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs/One", "1");
            AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs/Two", "2");
            AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs/Three", "3");
            AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs/Four", "4");
            AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs/Five", "5");
            AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs/Six", "6");
            AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs/Seven", "7");
            AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Signs/Eight", "8");
            AddEntry("Content/Ultimate/UltAlexander/LimitCutAM/Test", "割り振りテスト");
            AddEntry("Content/Ultimate/UltAlexander/WaterLightningAM", "水/雷属性圧縮 オートマーカー");
            AddEntry("Content/Ultimate/UltAlexander/WaterLightningAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltAlexander/WaterLightningAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltAlexander/WaterLightningAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltAlexander/WaterLightningAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltAlexander/WaterLightningAM/Signs/Water", "水属性圧縮");
            AddEntry("Content/Ultimate/UltAlexander/WaterLightningAM/Signs/Lightning", "雷属性圧縮");
            AddEntry("Content/Ultimate/UltAlexander/WaterLightningAM/Test", "割り振りテスト");
            AddEntry("Content/Ultimate/UltAlexander/TemporalAM", "時間停止 オートマーカー");
            AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltAlexander/TemporalAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltAlexander/TemporalAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs/House1", "接近強制 1");
            AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs/House2", "接近強制 2");
            AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs/Restraining1", "接近禁止 1");
            AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs/Restraining2", "接近禁止 2");
            AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs/Aggravated1", "加重罰 1");
            AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs/Aggravated2", "加重罰 2");
            AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs/Nothing1", "無職 1");
            AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Signs/Nothing2", "無職 2");
            AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltAlexander/TemporalAM/Test", "割り振りテスト");
            AddEntry("Content/Ultimate/UltAlexander/CrystalAM", "時空潜行のマーチ 結晶 オートマーカー");
            AddEntry("Content/Ultimate/UltAlexander/CrystalAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltAlexander/CrystalAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltAlexander/CrystalAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltAlexander/CrystalAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltAlexander/CrystalAM/Signs/Crystal1", "結晶 1");
            AddEntry("Content/Ultimate/UltAlexander/CrystalAM/Signs/Crystal2", "結晶 2");
            AddEntry("Content/Ultimate/UltAlexander/CrystalAM/Signs/Crystal3", "結晶 3");
            AddEntry("Content/Ultimate/UltAlexander/CrystalAM/Signs/Crystal4", "結晶 4");
            AddEntry("Content/Ultimate/UltAlexander/CrystalAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltAlexander/CrystalAM/Test", "割り振りテスト");
            AddEntry("Content/Ultimate/UltAlexander/InceptionAM", "時空潜航のマーチ オートマーカー");
            AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltAlexander/InceptionAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltAlexander/InceptionAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs/SharedSentence", "集団罰");
            AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs/Restraining1", "接近禁止 1");
            AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs/Restraining2", "接近禁止 2");
            AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs/Aggravated1", "加重罰 1");
            AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs/Aggravated2", "加重罰 2");
            AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs/Nothing1", "無職 1");
            AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs/Nothing2", "無職 2");
            AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Signs/Nothing3", "無職 3");
            AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltAlexander/InceptionAM/Test", "割り振りテスト");
            AddEntry("Content/Ultimate/UltAlexander/WormholeAM", "ワームホール オートマーカー");
            AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltAlexander/WormholeAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltAlexander/WormholeAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs/One", "1");
            AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs/Two", "2");
            AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs/Three", "3");
            AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs/Four", "4");
            AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs/Five", "5");
            AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs/Six", "6");
            AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs/Seven", "7");
            AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Signs/Eight", "8");
            AddEntry("Content/Ultimate/UltAlexander/WormholeAM/Test", "割り振りテスト");
            AddEntry("Content/Ultimate/UltAlexander/FinalWordAM", "確定判決 オートマーカー");
            AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs/LightBeacon", "接触保護");
            AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs/Light1", "接触禁止 1");
            AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs/Light2", "接触禁止 2");
            AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs/Light3", "接触禁止 3");
            AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs/DarkBeacon", "逃亡観察");
            AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs/Dark1", "逃亡禁止 1");
            AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs/Dark2", "逃亡禁止 2");
            AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Signs/Dark3", "逃亡禁止 3");
            AddEntry("Content/Ultimate/UltAlexander/FinalWordAM/Test", "割り振りテスト");
            #endregion
            #region 1.0.2.4
            AddEntry("Content/Criterion/EwCritAloalo/PlayerMarch", "爆雷戦術:面 インジケーター");
            AddEntry("Content/Criterion/EwCritAloalo/PlayerMarch/Enabled", "有効");
            AddEntry("Content/Criterion/EwCritAloalo/PlayerMarch/IndicatorColor", "インジケーターの色");
            AddEntry("Content/Criterion/EwCritAloalo/PlayerMarch/Test", "ランダムな方向でテスト");
            AddEntry("Content/Criterion/EwCritAloalo/StaticeReload", "スターチス 弾丸リロード インジケーター");
            AddEntry("Content/Criterion/EwCritAloalo/StaticeReload/Enabled", "有効");
            AddEntry("Content/Criterion/EwCritAloalo/StaticeReload/LoadedColor", "ロードされたチャンバーの色");
            AddEntry("Content/Criterion/EwCritAloalo/StaticeReload/MisloadedColor", "ロード失敗したチャンバーの色");
            AddEntry("Content/Criterion/EwCritAloalo/StaticeReload/UnloadedColor", "ロードされていないチャンバーの色");
            AddEntry("Content/Criterion/EwCritAloalo/StaticeReload/Test", "プレイヤーにランダムな弾丸をテスト");
            #endregion
            #region 1.0.2.3
            AddEntry("Content/Criterion", "アナザーダンジョン");
            AddEntry("Content/Criterion/Enabled", "有効");
            AddEntry("Content/Criterion/EwCritAloalo", "異聞アロアロ島");
            AddEntry("Content/Criterion/EwCritAloalo/Enabled", "有効");
            AddEntry("Content/Criterion/EwCritAloalo/SpringCrystal", "湧水のクリスタル セーフスポット インジケーター");
            AddEntry("Content/Criterion/EwCritAloalo/SpringCrystal/Enabled", "有効");
            AddEntry("Content/Criterion/EwCritAloalo/SpringCrystal/SafeSpotColor", "セーフスポット インジケーターの色");
            AddEntry("Content/Criterion/EwCritAloalo/SpringCrystal/Test", "プレイヤーに対してテスト");
             AddEntry("Content/Criterion/EwCritAloalo/LalaRotation", "Lala rotation indicator");
            AddEntry("Content/Criterion/EwCritAloalo/LalaRotation/Enabled", "有効");
            AddEntry("Content/Criterion/EwCritAloalo/LalaRotation/SafeZoneColor", "セーフゾーン インジケーターの色");
            AddEntry("Content/Criterion/EwCritAloalo/LalaRotation/Test", "ランダムな方向でプレイヤーにテスト");
            AddEntry("Content/Criterion/EwCritAloalo/PlayerRotation", "Unseen shield rotation indicator");
            AddEntry("Content/Criterion/EwCritAloalo/PlayerRotation/Enabled", "有効");
            AddEntry("Content/Criterion/EwCritAloalo/PlayerRotation/IndicatorColor", "シールドインジケーターの色");
            AddEntry("Content/Criterion/EwCritAloalo/PlayerRotation/Test", "ランダムな方向でテスト");
            AddEntry("Content/Ultimate/UltUcob/FireballAm", "(P2) ファイアボール オートマーカー");
            AddEntry("Content/Ultimate/UltUcob/FireballAm/Enabled", "有効");
            AddEntry("Content/Ultimate/UltUcob/FireballAm/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltUcob/FireballAm/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltUcob/FireballAm/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltUcob/FireballAm/Signs/FireballTarget", "ファイアボールターゲット");
            AddEntry("Content/Ultimate/UltUcob/FireballAm/Test", "割り振りテスト");
            AddEntry("Content/Debug/Debugger/EventLogger/IncludeLocation", "位置情報を含める");
            AddEntry("Content/Debug/Debugger/EventLogger/ResolveNames", "アクション名とステータス名を解決する");
            #endregion
            #region 1.0.2.2
            AddEntry("Content/Ultimate/UltUcob/GrandOctetAm", "(P3) 群竜の八重奏 オートマーカー");
            AddEntry("Content/Ultimate/UltUcob/GrandOctetAm/Enabled", "有効");
            AddEntry("Content/Ultimate/UltUcob/GrandOctetAm/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltUcob/GrandOctetAm/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltUcob/GrandOctetAm/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltUcob/GrandOctetAm/Signs/TwistingDive", "ツイスターダイブターゲット");
            AddEntry("Content/Ultimate/UltUcob/GrandOctetAm/Test", "割り振りテスト");
            #endregion
            #region 1.0.2.1
            AddEntry("Job/BLU", "青魔道士");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm", "(P3) 連撃の三重奏 オートマーカー");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Enabled", "有効");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs1", "魔力錬成");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs1/Hatch1", "魔力錬成 1");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs1/Hatch2", "魔力錬成 2");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs1/Hatch3", "魔力錬成 3");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs1/Nonhatch1", "無職 1");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs1/Nonhatch2", "無職 2");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs1/Nonhatch3", "無職 3");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs2", "アースシェイカー");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs2/Shaker1", "アースシェイカー 1");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs2/Shaker2", "アースシェイカー 2");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs2/Shaker3", "アースシェイカー 3");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Signs2/Shaker4", "アースシェイカー 4");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltUcob/TenstrikeAm/Test", "割り振りテスト");
            #endregion
            #region 1.0.2.0
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM", "(P12s)4層 カロリックセオリー1 オートマーカー");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Enabled", "有効");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs1", "初期マーカー設定");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs1/InitialWind1", "(初回)重火の兆し 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs1/InitialWind2", "(初回)重火の兆し 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2", "初回重火の兆し発動後");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2/Fire1", "火 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2/Fire2", "火 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2/Fire3", "火 3");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2/Fire4", "火 4");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2/Wind1", "風 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2/Wind2", "風 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2/Wind3", "風 3");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs2/Wind4", "風 4");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs3", "2回目重火の兆し発動後");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs3/Fire1", "火 ペア 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs3/Fire2", "火 ペア 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs3/OldFire1", "火 ペア処理担当 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Signs3/OldFire2", "火 ペア処理担当 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Prio", "優先度設定");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory1AM/Test", "割り振りテスト");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM", "(P12s)4層 カロリックセオリー2 オートマーカー");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Enabled", "有効");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs", "マーカー設定");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs/Fire1", "初回重火の兆し");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs/Wind1", "風 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs/Wind2", "風 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs/Wind3", "風 3");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs/Wind4", "風 4");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs/Wind5", "風 5");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs/Wind6", "風 6");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Signs/Wind7", "風 7");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Prio", "優先度設定");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/CaloricTheory2AM/Test", "割り振りテスト");
            #endregion
            #region 1.0.1.8
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM", "(P12s)4層 パンゲネシス オートマーカー");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Enabled", "有効");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs", "マーカー設定");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs/LongLight", "光 20秒");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs/ShortLight", "光 16秒");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs/LongDark", "闇 20秒");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs/ShortDark", "闇 16秒");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs/One1", "因子1つ 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs/One2", "因子1つ 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs/Nothing1", "無職 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Signs/Nothing2", "無職 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Prio", "優先度設定");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/PangenesisAM/Test", "割り振りテスト");
            #endregion
            #region 1.0.1.6
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM", "(P9s)1層 ジャンブルコンボ オートマーカー");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/Enabled", "有効");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/Signs", "マーカー設定");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/Signs/LimitCut2", "サイコロ2");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/Signs/LimitCut4", "サイコロ4");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/Signs/LimitCut6", "サイコロ6");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/Signs/LimitCut8", "サイコロ8");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/Signs/BlueMarker", "氷魔衝(青玉)");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/LevinballAM/Test", "割り振りテスト");
            #endregion
            #region 1.0.1.5
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotVisuals", "DoT描画設定");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotVisuals/BarWidth", "DoTバーの幅");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotVisuals/ItemHeight", "DoTバーの高さ");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotVisuals/ShowBar", "DoTバーの表示");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotVisuals/ShowIcon", "ステータスエフェクトアイコンの表示");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotVisuals/ShowTime", "時間の表示");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotVisuals/ItemOffsetWorld", "ゲーム内座標でのDoTバー位置オフセット");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotVisuals/ItemOffsetScreen", "ゲーム内座標でのDoTバー位置オフセット");
            #endregion
            #region 1.0.1.4
            AddEntry("Content/Miscellaneous/Overlays", "オーバーレイ");
            AddEntry("Content/Miscellaneous/Overlays/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker", "DoTトラッカー");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Overlays/DotTracker/DotSettings", "DoTの状態を監視する");
            #endregion
            #region 1.0.1.3
            AddEntry("Timelines/ActionTypes/ChatMessage", "ゲーム内チャットメッセージ");
            AddEntry("Timelines/ActionTypes/IngameCommand", "ゲーム内コマンド");
            AddEntry("Timelines/ChatMessageText", "ゲーム内チャットにメッセージを表示する");
            AddEntry("Timelines/ChatMessageSeverity", "メッセージの重要度");
            AddEntry("Timelines/IngameCommandText", "実行するコマンド");
            AddEntry("Timelines/ChatMessageSeverity/Normal", "通常");
            AddEntry("Timelines/ChatMessageSeverity/Error", "エラー");
            #endregion
            #region 1.0.1.1
            AddEntry("Signs/Attack6", "攻撃 6");
            AddEntry("Signs/Attack7", "攻撃 7");
            AddEntry("Signs/Attack8", "攻撃 8");
            #endregion
            #region 1.0.1.0
            AddEntry("MainMenu/Timelines", "タイムライン");
            AddEntry("Timelines/Timeline", "タイムライン");
            AddEntry("Timelines/Encounter", "エンカウンター/フェーズ {0}");
            AddEntry("Timelines/Timeline/None", "(無し)");
            AddEntry("Timelines/ReloadTimeline", "タイムラインリロード");
            AddEntry("Timelines/Profile/Default", "(デフォルト)");
            AddEntry("Timelines/Profile", "プロファイル");
            AddEntry("Timelines/CreateProfile", "新しいプロファイルの作成");
            AddEntry("Timelines/CreateNewProfileAs", "名前をつけてプロファイルを作成");
            AddEntry("Timelines/CloneProfile", "プロファイルを複製");
            AddEntry("Timelines/CloneProfileAs", "名前をつけてプロファイルを複製");
            AddEntry("Timelines/DeleteProfile", "プロファイルを削除");
            AddEntry("Timelines/PreviewActive", "この設定が表示されている間、タイムラインオーバーレイの移動とサイズ変更が可能です。また、現在表示されている設定用のオーバーレイは、プレビューとして通常の動作より加速して表示され、この間は通常のタイムライン表示ができません。");
            AddEntry("Timelines/PreviewTestAbilityName", "アビリティ表示テスト");
            AddEntry("Timelines/Settings/ShowOverlay", "タイムラインオーバーレイを利用可能な場合に表示する");
            AddEntry("Timelines/Settings/BarColor", "イベント予兆バーの色");
            AddEntry("Timelines/Settings/BarSoonColor", "イベント警告バーの色");
            AddEntry("Timelines/Settings/BarActiveColor", "現在発生中のイベントバーの色");
            AddEntry("Timelines/Settings/BarTextColor", "イベント予兆テキストの色");
            AddEntry("Timelines/Settings/BarSoonTextColor", "イベント警告テキストの色");
            AddEntry("Timelines/Settings/BarActiveTextColor", "現在発生中のイベントテキストの色");
            AddEntry("Timelines/Settings/BarBgColor", "タイムラインバーの背景色");
            AddEntry("Timelines/Settings/ShowBarHead", "イベントバーの先端部分をハイライトする");
            AddEntry("Timelines/Settings/ShowBarName", "イベントバーにイベントテキストを表示する");
            AddEntry("Timelines/Settings/ShowBarTime", "イベントバーに残り秒数を表示する");
            AddEntry("Timelines/Settings/ShowBarCaps", "常にイベントテキストを大文字で表示する");
            AddEntry("Timelines/Settings/ShowDebug", "タイムラインのデバッグ情報を表示する");
            AddEntry("Timelines/Settings/BarStyle", "タイムラインバーの表示スタイル");
            AddEntry("Timelines/Settings/BarStyles/Solid", "ソリッド");
            AddEntry("Timelines/Settings/BarStyles/Fancy", "ファンシー");
            AddEntry("Timelines/Settings/BarHeight", "タイムラインバーの高さ");
            AddEntry("Timelines/Settings/BarTextScale", "テキストのサイズ");
            AddEntry("Timelines/Settings/TimeThreshold", "イベントを可視化する秒数");
            AddEntry("Timelines/Settings/SoonThreshold", "イベントを警告する秒数");
            AddEntry("Timelines/Settings/PastThreshold", "終了したイベントの表示秒数");
            AddEntry("Timelines/SpecialTags/Targettable", "ターゲット可能");
            AddEntry("Timelines/SpecialTags/Untargettable", "ターゲット不能");
            AddEntry("MainMenu/Settings/TimelineSettings", "タイムラインの設定");
            AddEntry("MainMenu/Settings/TimelineTabVisible", "タイムラインタブを表示する");
            AddEntry("MainMenu/Settings/TimelineLocalAllowed", "ローカルタイムラインの読み込みを許可する");
            AddEntry("MainMenu/Settings/TimelineLocalFolder", "ローカルタイムラインのフォルダ");
            AddEntry("MainMenu/Settings/TimelineLocalReload", "ローカルタイムラインを全てリロードする");
            AddEntry("MainMenu/Settings/TimelineOverlaySettings", "タイムラインオーバーレイの設定");
            AddEntry("Timelines/ProfileDetails", "プロファイルの設定");
            AddEntry("Timelines/EventDetails", "タイムライン イベント");
            AddEntry("Timelines/Reactions", "リアクション");
            AddEntry("Timelines/ProfileSettings/DefaultApplied", "デフォルトのプロファイルは、タイムラインのグローバルなプロファイルとみなされ、そのプロファイルからの設定やリアクションは、使用中の他のプロファイルからの設定やリアクションに加えて、常に適用されます。");
            AddEntry("Timelines/ProfileSettings/ShowOverlay", "このプロファイルが適用されたときにオーバーレイを表示する");
            AddEntry("Timelines/ProfileSettings/ReactionsActive", "このプロファイルが適用されたときにリアクションを有効にする");
            AddEntry("Timelines/ProfileSettings/ApplyAlways", "常にこのプロファイルを使用する");
            AddEntry("Timelines/ProfileSettings/ApplyProfileOnJob", "このプロファイルは、次のいずれかのジョブを使用するときに適用します:");
            AddEntry("Timelines/EventSettings/ShowOverlay", "このイベントをタイムラインオーバーレイに表示する");
            AddEntry("Timelines/EventSettings/ReactionsActive", "このイベントに対するリアクションを有効にする");
            AddEntry("Timelines/Reactions/NewReaction", "新しいリアクションの作成");
            AddEntry("Timelines/Reactions/CloneReaction", "リアクションを複製");
            AddEntry("Timelines/Reactions/DeleteReaction", "リアクションを削除");
            AddEntry("Timelines/Reactions/TestReaction", "リアクションのテスト");
            AddEntry("Timelines/CreateNewReactionAs", "名前をつけてリアクションを作成");
            AddEntry("Timelines/CloneReactionAs", "名前をつけてリアクションを複製");
            AddEntry("Timelines/Actions", "アクション");
            AddEntry("Timelines/Status/ActiveTimeline", "現在有効なタイムライン");
            AddEntry("Timelines/Status/ActiveProfile", "現在有効なプロファイル");
            AddEntry("Timelines/Status/InactiveTimeline", "このゾーンでは、現在有効または利用可能なタイムラインはありません");
            AddEntry("Timelines/ReactionSettings/TimeOffset", "イベントからの時間オフセット(指定範囲内でランダム)");
            AddEntry("Timelines/Actions/NewAction", "新しいアクションの作成");
            AddEntry("Timelines/Actions/CloneAction", "アクションの複製");
            AddEntry("Timelines/Actions/DeleteAction", "アクションの削除");
            AddEntry("Timelines/Actions/TestAction", "アクションのテスト");
            AddEntry("Timelines/ActionTypes", "アクションタイプ");
            AddEntry("Timelines/ActionTypes/Notification", "通知");
            AddEntry("Timelines/NotificationSeverity", "重要度");
            AddEntry("Timelines/NotificationSeverity/Critical", "クリティカル");
            AddEntry("Timelines/NotificationSeverity/Important", "警戒");
            AddEntry("Timelines/NotificationSeverity/Normal", "通常");
            AddEntry("Timelines/NotificationSoundEffect", "サウンドエフェクト");
            AddEntry("Timelines/NotificationText", "テキストメッセージ");
            AddEntry("Timelines/NotificationTTL", "残存期間の通知");
            AddEntry("Timelines/NotificationTTS", "TTSの使用");
            AddEntry("SoundEffect/None", "サウンドエフェクト無し");
            AddEntry("MainMenu/Settings/NotificationOverlaySettings", "通知用オーバーレイの設定");
            AddEntry("Notifications/PreviewActive", "この設定が表示されている間、通知用オーバーレイの移動とサイズ変更が可能です。また、現在表示されている設定用のオーバーレイは、設定内容のプレビューが表示され、この間は通常の通知表示ができません。");
            AddEntry("Notifications/Settings/ShowOverlay", "通知用オーバーレイを表示する");
            AddEntry("Notifications/TestNotification", "通知テキスト: {0}");
            AddEntry("Notifications/Settings/TextScale", "通知テキストのサイズ");
            AddEntry("Notifications/Settings/EntryHeight", "通知の高さ");
            AddEntry("Notifications/Settings/NotificationOrderReverse", "新着通知を上部ではなく下部に表示する");
            AddEntry("Notifications/Settings/TextAlignments", "通知文の文字揃え");
            AddEntry("Notifications/Settings/TextAlignments/Left", "左揃え");
            AddEntry("Notifications/Settings/TextAlignments/Center", "中央揃え");
            AddEntry("Notifications/Settings/TextAlignments/Right", "右揃え");
            AddEntry("Notifications/Settings/CriticalTextColor", "クリティカルな通知テキストの色");
            AddEntry("Notifications/Settings/CriticalBgColor", "クリティカルな通知の背景色");
            AddEntry("Notifications/Settings/ImportantTextColor", "警戒通知テキストの色");
            AddEntry("Notifications/Settings/ImportantBgColor", "警戒通知の背景色");
            AddEntry("Notifications/Settings/NormalTextColor", "通常通知テキストの色");
            AddEntry("Notifications/Settings/NormalBgColor", "通常通知の背景色");
            AddEntry("Notifications/Settings/EntryMargin", "水平方向のテキストマージン");
            AddEntry("Timelines/ReactionSettings/Triggers", "リアクショントリガー");
            AddEntry("Timelines/ReactionSettings/Triggers/Timed", "時間");
            AddEntry("Timelines/ReactionSettings/Triggers/OnCastBegin", "アビリティの詠唱開始");
            AddEntry("Timelines/ReactionSettings/Triggers/OnCastEnd", "アビリティの発動");
            AddEntry("Timelines/ReactionSettings/Triggers/Targettable", "戦闘対象がターゲット可能");
            AddEntry("Timelines/ReactionSettings/Triggers/Untargettable", "戦闘対象がターゲット不可");
            AddEntry("Timelines/ReactionSettings/Triggers/Spawn", "新しい戦闘対象の出現");
            AddEntry("MainMenu/Settings/TtsSettings", "TTSの設定");
            AddEntry("TextToSpeech/Settings/TTSEnabled", "TTSを有効");
            AddEntry("TextToSpeech/Settings/TTSAllNotifications", "全ての通知に対して自動的にTTSを有効");
            AddEntry("TextToSpeech/Settings/TTSSpeed", "話速");
            AddEntry("TextToSpeech/Settings/TTSVolume", "声量");
            AddEntry("Content/Debug/Timelines", "タイムライン");
            AddEntry("Content/Debug/Timelines/Enabled", "有効");
            AddEntry("Content/Debug/Timelines/TimelineRecorder", "タイムラインレコーダー");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/Enabled", "有効");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/StartRecordingOnCombat", "戦闘開始時に自動で記録開始/再開");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/SuspendRecordingAfterCombat", "戦闘終了時に自動的に記録を中断し、再開時に新たなエンカウンターをスタートさせる");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/StopRecordingAfterCombat", "戦闘終了時に自動的に記録を停止し、現在の記録をファイナライズ");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/ResumeRecordingOnTargettable", "敵がターゲット可能になった時に記録を再開する");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/SuspendRecordingOnUntargettable", "敵がターゲット不能になった時に記録を一時停止する");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/StopRecordingOnUntargettable", "敵がターゲット不能になった時に記録を停止する");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/TargetFolder", "タイムライン対象フォルダー");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/CurrentStatus", "現在の記録状態");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/CurrentTargetFile", "現在の記録対象ファイル");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/StartRecordingAction", "記録の開始/再開");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/SuspendRecordingAction", "記録の中断");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/StopRecordingAction", "記録の停止及びタイムラインのファイナライズ");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/IgnoreAutoAttacks", "AAを無視する");
            AddEntry("Content/Debug/Timelines/TimelineRecorder/IgnoreSpawns", "新しい戦闘対象を無視する");
            AddEntry("TimelineRecorder/Idle", "休止中");
            AddEntry("TimelineRecorder/Recording", "イベント記録中");
            AddEntry("TimelineRecorder/Suspended", "記録の中断中");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM", "(P5) 至天の陣：死刻オートマーカー");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/Doom1", "死の宣告 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/Doom2", "死の宣告 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/Doom3", "死の宣告 3");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/Doom4", "死の宣告 4");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/NonDoom1", "無職 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/NonDoom2", "無職 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/NonDoom3", "無職 3");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Signs/NonDoom4", "無職 4");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltDragonsongReprise/DothAM/Test", "割り振りテスト");
            #endregion
            #region <1.0.1.0
            AddEntry("Command/QuickToggleAutomarkers/On", "Lemegeton: オートマーカーを有効にしました。");
            AddEntry("Command/QuickToggleAutomarkers/Off", "Lemegeton: オートマーカーを無効にしました。");
            AddEntry("Command/QuickToggleOverlays/On", "Lemegeton: 描画とオーバーレイを有効にしました。");
            AddEntry("Command/QuickToggleOverlays/Off", "Lemegeton: 描画とオーバーレイを無効にしました。");
            AddEntry("Command/QuickToggleSound/On", "Lemegeton: サウンド機能を有効にしました。");
            AddEntry("Command/QuickToggleSound/Off", "Lemegeton: サウンド機能を無効にしました。");
            AddEntry("Command/QuickToggleHacks/On", "Lemegeton: ハックとゲーム改変機能を有効にしました。");
            AddEntry("Command/QuickToggleHacks/Off", "Lemegeton: ハックとゲーム改変機能を無効にしました。");
            AddEntry("Command/QuickToggleAutomation/On", "Lemegeton: 自動化機能を有効にしました。");
            AddEntry("Command/QuickToggleAutomation/Off", "Lemegeton: 自動化機能を無効にしました。");
            AddEntry("Command/AutomarkerSoft/On", "Lemegeton: クライアントサイドのソフトオートマーカーを有効にしました。");
            AddEntry("Command/AutomarkerSoft/Off", "Lemegeton: クライアントサイドのソフトオートマーカーを無効にしました。");
            AddEntry("Status/AtAGlance", "一覧");
            AddEntry("Status/CurrentlyActive", "現在有効な機能");
            AddEntry("Status/ImpactToFunctionality", "機能への影響");
            AddEntry("Status/AllIsWell", "すべて正常に動作するはずです!");
            AddEntry("Status/StatusGotOpcodesTrue", "ネットワークオペコード読み込み完了");
            AddEntry("Status/StatusGotOpcodesFalse", "ネットワークオペコードの読み込みに失敗しました!");
            AddEntry("Status/StatusMarkingFuncAvailableTrue", "マーキング機能有効");
            AddEntry("Status/StatusMarkingFuncAvailableFalse", "マーキング機能の有効化に失敗しました!");
            AddEntry("Status/StatusPostCommandAvailableTrue", "コマンド送信機能有効");
            AddEntry("Status/StatusPostCommandAvailableFalse", "コマンド送信機能の有効化に失敗しました!");
            AddEntry("Status/StatusNetworkTrafficUpTrue", "サーバーへの通信は問題ありません");
            AddEntry("Status/StatusNetworkTrafficUpFalse", "過去1分間におけるサーバーへの通信を確認出来ませんでした!");
            AddEntry("Status/StatusNetworkTrafficDownTrue", "サーバーからの通信は問題ありません");
            AddEntry("Status/StatusNetworkTrafficDownFalse", "過去1分間におけるサーバーへの通信を確認出来ませんでした!");
            AddEntry("Status/WarnNoOpcodes", "オペコードが利用できないためネットワーク通信を読み取れず、ゲーム内でのイベントを確認出来ません。つまり、かなり多くの機能が壊れている可能性があります!");
            AddEntry("Status/WarnOpcodesVersion", "オペコード情報が、現在稼働しているゲームバージョン({1})と異なるゲームバージョン({0})のものです - これはゲームのアップデート直後に起こる可能性が高く、アップデートによる修正が必要です。かなり多くの機能が壊れている可能性があります!");
            AddEntry("Status/WarnAutomarkersBroken", "どのマーキング方法も利用できないので、オートマーキングを行うことはできません。つまり、オートマーカーが壊れています!");
            AddEntry("Status/WarnAutomarkersSemibroken", "デフォルトのマーキング方式は使用できませんが、別の手法でのマーキング方式はまだ使用できるようです。つまり、オートマーカーはまだ使えるはずですが、万が一、何か変なことが起きたら、これが原因かもしれません。");
            AddEntry("Status/WarnCommandPostBroken", "デフォルトのマーキング方式は利用できますが、バックアップ用の手法でのマーキング方式は利用できません。オートマーカーへの影響はありませんが、ご参考までに。");
            AddEntry("Status/WarnNoTrafficUp", "ネットワーク通信がサーバーへ届かず、あなたは切断されている可能性かあります。あなたのアクションが反映されないことがあります。");
            AddEntry("Status/WarnNoTrafficDown", "ネットワーク通信がサーバーから受信出来ない場合、ネットワークが切断されているか、プラグインがネットワークデータを受信していない可能性があります。いずれにせよ、サーバーから情報を受信しないと、多くの機能が壊れてしまう可能性があります!");
            AddEntry("Status/WarnHacksActive", "ハックやゲーム改変機能を少なくとも1つ有効にしているます! その効果は、見る人が見れば一目瞭然なので、ストリーミングはお勧めしません。");
            AddEntry("Status/WarnAutomationsActive", "少なくとも1つの自動化機能が有効になっています! その効果は、見る人が見れば一目瞭然なので、ストリーミングはお勧めしません。");
            AddEntry("Status/WarnDrawsActive", "少なくとも1つの画面描画機能またはオーバーレイが有効になっています! ストリーミングを予定している場合は、オーバーレイがキャプチャされないように、キャプチャ設定を確認してください。");
            AddEntry("Status/WarnAutomarkersQuickDisabled", "少なくとも1つのオートマーカーが有効になっていますが、オートマーカーは現在、設定の「クイックトグル」で無効になっています。");
            AddEntry("Status/WarnOverlaysQuickDisabled", "少なくとも1つの画面描画機能またはオーバーレイが有効になっていますが、現在、設定の「クイックトグル」で描画とオーバーレイが無効になっています。");
            AddEntry("Status/WarnSoundQuickDisabled", "少なくとも1つのサウンド通知機能が有効になっていますが、現在、設定の「クイックトグル」でサウンド通知が無効になっています。");
            AddEntry("Status/WarnHackQuickDisabled", "少なくとも1つのハックやゲーム改変機能が有効になっていますが、ハックやゲーム改変機能は現在、設定の「クイックトグル」で無効になっています。");
            AddEntry("Status/WarnAutomationQuickDisabled", "少なくとも1つのオートメーション機能が有効になっていますが、オートメーション機能は現在、設定の「クイックトグル」で無効になっています。");
            AddEntry("Status/NumFeaturesAutomarker", "オートマーカー");
            AddEntry("Status/NumFeaturesDrawing", "描画とオーバーレイ");
            AddEntry("Status/NumFeaturesSound", "サウンド");
            AddEntry("Status/NumFeaturesHack", "ハックやゲーム改変機能");
            AddEntry("Status/NumFeaturesAutomation", "自動化機能");
            AddEntry("SoundEffect/Se1", "Sound Effect 1");
            AddEntry("SoundEffect/Se2", "Sound Effect 2");
            AddEntry("SoundEffect/Se3", "Sound Effect 3");
            AddEntry("SoundEffect/Se4", "Sound Effect 4");
            AddEntry("SoundEffect/Se5", "Sound Effect 5");
            AddEntry("SoundEffect/Se6", "Sound Effect 6");
            AddEntry("SoundEffect/Se7", "Sound Effect 7");
            AddEntry("SoundEffect/Se8", "Sound Effect 8");
            AddEntry("SoundEffect/Se9", "Sound Effect 9");
            AddEntry("SoundEffect/Se10", "Sound Effect 10");
            AddEntry("SoundEffect/Se11", "Sound Effect 11");
            AddEntry("SoundEffect/Se12", "Sound Effect 12");
            AddEntry("SoundEffect/Se13", "Sound Effect 13");
            AddEntry("SoundEffect/Se14", "Sound Effect 14");
            AddEntry("SoundEffect/Se15", "Sound Effect 15");
            AddEntry("SoundEffect/Se16", "Sound Effect 16");
            AddEntry("ObjectKind/None", "なし");
            AddEntry("ObjectKind/Player", "プレイヤー");
            AddEntry("ObjectKind/BattleNpc", "敵/戦闘NPC");
            AddEntry("ObjectKind/EventNpc", "イベントNPC");
            AddEntry("ObjectKind/Treasure", "宝箱");
            AddEntry("ObjectKind/Aetheryte", "エーテライト");
            AddEntry("ObjectKind/GatheringPoint", "採集ポイント");
            AddEntry("ObjectKind/EventObj", "イベントオブジェクト");
            AddEntry("ObjectKind/MountType", "マウント");
            AddEntry("ObjectKind/Companion", "ミニオン");
            AddEntry("ObjectKind/Retainer", "リテイナー");
            AddEntry("ObjectKind/Area", "エリアオブジェクト");
            AddEntry("ObjectKind/Housing", "ハウジングオブジェクト");
            AddEntry("ObjectKind/Cutscene", "カットシーンオブジェクト");
            AddEntry("ObjectKind/CardStand", "カードスタンド");
            AddEntry("ObjectKind/Ornament", "オーナメント");
            AddEntry("Misc/None", "(none)");
            AddEntry("Misc/HQ", "HQ");
            AddEntry("Misc/SavePreset", "プリセットを保存");
            AddEntry("Misc/SaveNewPresetAs", "新しいプリセットとして保存");
            AddEntry("Misc/DeletePreset", "プリセットを削除");
            AddEntry("Misc/OpenShortcut", "レメゲトンを開く");
            AddEntry("Misc/ShowAdvancedOptions", "詳細なオプションを表示する");
            AddEntry("Misc/HideAdvancedOptions", "詳細なオプションを非表示にする");
            AddEntry("Misc/DragToReorderPrio", "左クリック&ドラッグで優先順位を入れ替え");
            AddEntry("Misc/RiskyFeature", "この機能は、ハックまたはゲーム改変機能であり、通常考えられる範囲を超えてゲームデータ/状態を変更する可能性があります。この機能は基本的に安全に使用できますが、この機能を使用したストリーミングは推奨されません。ご自身の判断でご利用ください!");
            AddEntry("Misc/ExperimentalFeature", "これは実験的な機能であり、テスト済みではありますが、まだ見つかっていないバグがあるかもしれません。もしこの機能がうまく機能しなかったり、何か変なことに気づいたりした場合は、修正するためにDiscordサーバーで報告してください!");
            AddEntry("Trinity/Tank", "タンク");
            AddEntry("Trinity/Healer", "ヒーラー");
            AddEntry("Trinity/DPS", "DPS");
            AddEntry("Role/Tank", "タンク");
            AddEntry("Role/Healer", "ヒーラー");
            AddEntry("Role/Melee", "メレー");
            AddEntry("Role/Ranged", "レンジ");
            AddEntry("Role/Caster", "キャスター");
            AddEntry("Job/PLD", "ナイト");
            AddEntry("Job/WAR", "戦士");
            AddEntry("Job/DRK", "暗黒騎士");
            AddEntry("Job/GNB", "ガンブレイカー");
            AddEntry("Job/WHM", "白魔道士");
            AddEntry("Job/SCH", "学者");
            AddEntry("Job/AST", "占星術師");
            AddEntry("Job/SGE", "賢者");
            AddEntry("Job/MNK", "モンク");
            AddEntry("Job/DRG", "竜騎士");
            AddEntry("Job/NIN", "忍者");
            AddEntry("Job/SAM", "侍");
            AddEntry("Job/RPR", "リーパー");
            AddEntry("Job/BRD", "吟遊詩人");
            AddEntry("Job/MCH", "機工士");
            AddEntry("Job/DNC", "踊り子");
            AddEntry("Job/BLM", "黒魔道士");
            AddEntry("Job/SMN", "召喚士");
            AddEntry("Job/RDM", "赤魔道士");
            AddEntry("Signs/None", "なし");
            AddEntry("Signs/Attack1", "攻撃 1");
            AddEntry("Signs/Attack2", "攻撃 2");
            AddEntry("Signs/Attack3", "攻撃 3");
            AddEntry("Signs/Attack4", "攻撃 4");
            AddEntry("Signs/Attack5", "攻撃 5");
            AddEntry("Signs/Bind1", "足止め 1");
            AddEntry("Signs/Bind2", "足止め 2");
            AddEntry("Signs/Bind3", "足止め 3");
            AddEntry("Signs/Ignore1", "禁止 1");
            AddEntry("Signs/Ignore2", "禁止 2");
            AddEntry("Signs/Circle", "まる");
            AddEntry("Signs/Plus", "プラス");
            AddEntry("Signs/Square", "四角");
            AddEntry("Signs/Triangle", "三角");
            AddEntry("Signs/AttackNext", "次の攻撃マーカー");
            AddEntry("Signs/BindNext", "次の足止めマーカー");
            AddEntry("Signs/IgnoreNext", "次の禁止マーカー");
            AddEntry("Automarker/ManualPreset", "マニュアル/手動");
            AddEntry("Automarker/PrioType/PartyMember", "プレイヤー");
            AddEntry("Automarker/PrioType/PartyListOrder", "PTリスト順");
            AddEntry("Automarker/PrioType/PartyListCustom", "任意のPTリスト順");
            AddEntry("Automarker/PrioType/Alphabetic", "アルファベット順");
            AddEntry("Automarker/PrioType/Trinity", "THD順");
            AddEntry("Automarker/PrioType/Role", "ロール順");
            AddEntry("Automarker/PrioType/Job", "ジョブ順");
            AddEntry("Automarker/PrioType/CongaX", "西-東 整列");
            AddEntry("Automarker/PrioType/CongaY", "北-南 整列");
            AddEntry("Automarker/PrioType/Player", "プレイヤー");
            AddEntry("Automarker/PrioType/Player/FillFromPartyList", "現在のパーティから");
            AddEntry("Automarker/PrioType/Player/FillFromCongaLine", "西-東の整列順");
            AddEntry("Automarker/PrioType/PlCustom/FillFromCongaLine", "西-東の整列順");
            AddEntry("Automarker/PrioType/PartyListOrder/Reversed", "上から下へではなく、下から上へ並べ替える");
            AddEntry("Automarker/PrioType/Alphabetic/Reversed", "昇順ではなく、降順で並べ替える");
            AddEntry("Automarker/PrioType/CongaX/Reversed", "西-東ではなく、東-西で並べ替える。");
            AddEntry("Automarker/PrioType/CongaY/Reversed", "北-南ではなく、南-北で並べ替える。");
            AddEntry("Automarker/TimingType/InheritDesc", "タイミング設定を基本設定から継承");
            AddEntry("MainMenu/Settings/QuickToggles", "クイックトグル");
            AddEntry("MainMenu/Settings/QuickToggles/Info", "これらの設定により、必要に応じて素早く機能を無効化することができます。コンテンツや種類に関係なく、考えられるすべてのソースが影響を受けます。");
            AddEntry("MainMenu/Settings/QuickToggles/Automarkers", "オートマーカーを許可する");
            AddEntry("MainMenu/Settings/QuickToggles/Overlays", "描画とオーバーレイを許可する");
            AddEntry("MainMenu/Settings/QuickToggles/Sound", "サウンドを許可する");
            AddEntry("MainMenu/Settings/QuickToggles/Hacks", "ハックやゲーム改変を許可する");
            AddEntry("MainMenu/Settings/QuickToggles/Automation", "自動化機能を許可する");
            AddEntry("MainMenu/Status", "ステータス");
            AddEntry("MainMenu/Content", "コンテンツ");
            AddEntry("MainMenu/Other", "その他");
            AddEntry("MainMenu/Settings", "設定");
            AddEntry("MainMenu/Settings/UiSettings", "UI設定");
            AddEntry("MainMenu/Settings/Language", "言語");
            AddEntry("MainMenu/Settings/AdvancedOptions", "コンテンツアイテムに常に詳細オプションを表示する");
            AddEntry("MainMenu/Settings/DebugSettings", "デバッグ設定");
            AddEntry("MainMenu/Settings/DebugSettings/QueueFramework", "フレームワークスレッドにエンキューする");
            AddEntry("MainMenu/Settings/DebugSettings/DelegateDebug", "イベント発生試験場");
            AddEntry("MainMenu/Settings/DebugSettings/Config", "デバッグ用設定");
            AddEntry("MainMenu/Settings/DebugSettings/LoadConfig", "設定をロードする");
            AddEntry("MainMenu/Settings/DebugSettings/SaveConfig", "設定をセーブする");
            AddEntry("MainMenu/Settings/DebugSettings/BackupConfig", "設定のバックアップを作成");
            AddEntry("MainMenu/Settings/DebugSettings/ExportConfig", "設定のエクスポート");
            AddEntry("MainMenu/Settings/DebugSettings/ImportConfig", "設定のインポート");
            AddEntry("MainMenu/Settings/DebugSettings/CopyToClipboard", "設定をクリップボードに保存");
            AddEntry("MainMenu/Settings/DebugSettings/PasteFromClipboard", "クリップボードの設定を読み込む");
            AddEntry("MainMenu/Settings/DebugOnlyLogAutomarkers", "オートマーカーを実際に適用するのではなく、ログのみ記録する");
            AddEntry("MainMenu/Settings/ShowShortcut", "ウィンドウを閉じた時にショートカットを表示する");
            AddEntry("MainMenu/Settings/NagAboutStreaming", "視覚的影響を与える可能性のある機能が有効化されている場合のストリーミングに関する注意喚起");
            AddEntry("MainMenu/Settings/AutomarkerSettings", "オートマーカーの設定");
            AddEntry("MainMenu/Settings/AutomarkersSoftDesc", "ソフトオートマーカーは、クライアントサイドのマーカーで、サーバーに送信されないため、他のプレイヤーからも見えません。表示方法は若干異なりますが、マーカー自体はインゲームの表示と同じものです。");
            AddEntry("MainMenu/Settings/AutomarkersSoft", "ソフトオートマーカーを使う");
            AddEntry("MainMenu/Settings/AutomarkersSoftPermsMissing", "ソフトオートマーカーは、別マーカーとして画面に描画されるため、描画の許可が必要です。'{2}'の中の'{1}'から'{0}'を有効にすることで描画を許可してください。");
            AddEntry("MainMenu/Settings/RemoveAutomarkers", "すべてのマークを強制的に除去");
            AddEntry("MainMenu/Settings/RemoveMarkersAfterCombatEnd", "戦闘終了後、すべてのマークを除去する");
            AddEntry("MainMenu/Settings/RemoveMarkersAfterWipe", "ワイプ後、すべてのマークを除去する");
            AddEntry("MainMenu/Settings/AutomarkersCommands", "通常のマーキング機能が有効でも、古いコマンドインジェクションを使用します。");
            AddEntry("MainMenu/Settings/AutomarkersInitialApplicationDelay", "マーカー初期付与までの遅延時間(指定範囲内でランダム)");
            AddEntry("MainMenu/Settings/AutomarkersSubsequentApplicationDelay", "マーカーの付与間隔(指定範囲内のランダムな間隔)");
            AddEntry("MainMenu/Settings/AutomarkerSeconds", "秒");
            AddEntry("MainMenu/Settings/SoftmarkerSettings", "ソフトマーカーの設定");
            AddEntry("MainMenu/Settings/SoftmarkerPreviewActive", "このメニューを開いている間、使用可能なソフトマーカーの一部がプレビューとして順番にキャラクター上に表示されます。このとき、他のソフトマーカーは表示されません。");
            AddEntry("MainMenu/Settings/SoftmarkerTint", "マーカー染色");
            AddEntry("MainMenu/Settings/SoftmarkerBounce", "マーカーを跳ねさせる");
            AddEntry("MainMenu/Settings/SoftmarkerBlink", "マーカーを点滅させる");
            AddEntry("MainMenu/Settings/SoftmarkerScaling", "マーカーのサイズ倍率");
            AddEntry("MainMenu/Settings/SoftmarkerOffsetWorld", "ゲーム内座標でのマーカーオフセット");
            AddEntry("MainMenu/Settings/SoftmarkerOffsetScreen", "スクリーン座標でのマーカーオフセット");
            AddEntry("MainMenu/Settings/OpcodeSettings", "オペコードの設定");
            AddEntry("MainMenu/Settings/LogUnhandledOpcodes", "未処理のオペコードをログに記録する");
            AddEntry("MainMenu/Settings/OpcodeUrl", "オペコードURL");
            AddEntry("MainMenu/Settings/OpcodeRegion", "オペコードのリージョン");
            AddEntry("MainMenu/Settings/OpcodeReload", "オペコードを再読み込み");
            AddEntry("MainMenu/About", "概要");
            AddEntry("Content/missing", "申し訳ありませんが、現時点でこのコンテンツはご利用いただけません!");
            AddEntry("Content/Debug", "デバッグ・開発用ツール");
            AddEntry("Content/Debug/Enabled", "有効");
            AddEntry("Content/Debug/Debugger", "デバッガー");
            AddEntry("Content/Debug/Debugger/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Hack", "ハック");
            AddEntry("Content/Miscellaneous/Hack/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Hack/Teleporter", "テレポート");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/X", "X");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/Y", "Y");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/Z", "Z");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/GetCurrent", "現在位置の取得");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/Teleport", "テレポート");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/PlayersNearby", "近くのプレイヤー");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/AllowRiskyTeleport", "近くにプレイヤーがいてもテレポートができるようにする");
            AddEntry("Content/Miscellaneous/Automation", "自動化");
            AddEntry("Content/Miscellaneous/Automation/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Automation/FishForever", "Fish on repeat");
            AddEntry("Content/Miscellaneous/Automation/FishForever/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Automation/FishForever/IgnoreLight", "弱震は無視");
            AddEntry("Content/Miscellaneous/Automation/FishForever/IgnoreMedium", "強震は無視");
            AddEntry("Content/Miscellaneous/Automation/FishForever/IgnoreHeavy", "激震は無視");
            AddEntry("Content/Miscellaneous/Automation/FishForever/UsePatience2", "ペーシェンスIIを使う");
            AddEntry("Content/Miscellaneous/Automation/FishForever/UseMooch", "泳がせ釣りを使う");
            AddEntry("Content/Miscellaneous/Automation/FishForever/UseMooch2", "泳がせ釣りⅡを使う");
            AddEntry("Content/Miscellaneous/Automation/FishForever/UseThaliakFavor", "サリャクの恩寵を使う");
            AddEntry("Content/Miscellaneous/Automation/FishForever/ReleaseEverything", "全てをリリースする");
            AddEntry("Content/Miscellaneous/Automation/FishForever/Food", "食事を使う");
            AddEntry("Content/Miscellaneous/VisualEnhancement", "視覚的な強化");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Enabled", "有効");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox", "ヒットボックス");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/Enabled", "有効");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/HitboxColor", "ヒットボックスの色");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/CastColor", "キャストインジケーターの色");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/DrawOnEnemies", "敵にハイライトを描画する");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/DrawOnPlayers", "プレイヤーにハイライトを描画する");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/OnlyCurrentTarget", "現在のターゲットにのみ描画を行う");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/ShowCasts", "ヒットボックスにキャスティングインジケーターを表示");
            AddEntry("Content/Debug/Debugger/ObjectMonitor", "オブジェクトモニター");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/Enabled", "有効");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TextColor", "タグの文字色");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/ShowTextBg", "文字の背景を表示する");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/BgColor", "タグの背景色");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TagPlayers", "タグ:プレイヤー");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TagEventObjs", "タグ:イベントオブジェクト");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TagBattleNpcs", "タグ:戦闘NPC");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TagOthers", "タグ:その他のすべての不特定多数のタイプ");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/OnlyVisible", "可視オブジェクトのみを表示する");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/OnlyTargettable", "ターゲット可能なオブジェクトのみを表示する");
            AddEntry("Content/Debug/Debugger/EventLogger", "イベントロガー");
            AddEntry("Content/Debug/Debugger/EventLogger/Enabled", "有効");
            AddEntry("Content/Debug/Debugger/EventLogger/LogInCombat", "戦闘中のログを取得する");
            AddEntry("Content/Debug/Debugger/EventLogger/LogOutsideCombat", "戦闘時以外のログを取得する");
            AddEntry("Content/Debug/Debugger/EventLogger/LogToDalamudLog", "Dalamudログに出力する");
            AddEntry("Content/Debug/Debugger/EventLogger/LogToFile", "ログをファイルに出力する");
            AddEntry("Content/Debug/Debugger/EventLogger/LogFilename", "ログのファイル名");
            AddEntry("Content/Debug/Debugger/EventLogger/CurrentLogFilename", "現在のログファイル");
            AddEntry("Content/Debug/Debugger/StressTest", "ストレステスト");
            AddEntry("Content/Debug/Debugger/StressTest/Enabled", "有効");
            AddEntry("Content/Debug/Debugger/StressTest/TestAutomarkers", "オートマーカーのテスト");
            AddEntry("Content/Debug/Debugger/StressTest/TestAutomarkerRapidfire", "オートマーカーテスト 高速付与/除去");
            AddEntry("Content/Debug/Debugger/StressTest/AmFails", "オートマーカーのエラー");
            AddEntry("Content/Miscellaneous", "その他");
            AddEntry("Content/Miscellaneous/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Radar", "レーダー");
            AddEntry("Content/Miscellaneous/Radar/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies", "敵の描画");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/ObjectColor", "敵の表示色");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/DrawLine", "近くの敵に対して線を描画する");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/ShowNames", "ネームタグを表示");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/TextColor", "ネームタグの文字色");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/BgColor", "ネームタグの背景色");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers", "プレイヤーの描画");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ObjectColor", "プレイヤーの表示色");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ShowNames", "ネームタグを表示");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/TextColor", "ネームタグの文字色");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/BgColor", "ネームタグの背景色");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ShowJobIcon", "ジョブアイコンを表示する");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ShowHpBar", "HPを表示する");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint", "採集ポイントの描画");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ObjectColor", "オブジェクト表示色");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/OnlyOnGatherers", "ギャザラージョブの場合のみ表示する");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowNames", "ネームタグを表示");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/TextColor", "ネームタグの文字色");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/BgColor", "ネームタグの背景色");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowHidden", "隠しノードの表示");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/HiddenColor", "隠しノードの表示色");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowNameOnHidden", "隠しノードにネームタグを表示");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowNameBgOnHidden", "隠しノードの背景を表示する");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder", "ファインダー");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LookFor", "探す対象");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LookFor/AddNew", "リストに追加");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LookFor/Remove", "選択したものを削除");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LookFor/Clear", "全削除");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeRankS", "Sランクを全て選択");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeRankA", "Aランクを全て選択");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeRankB", "Bランクを全て選択");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeIslandRare", "無人島のレア動物を含める");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/SoundAlert", "発見した場合にサウンド通知を有効にする");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/ObjectColor", "オブジェクトの表示色");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/SRankColor", "Sランクの表示色");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/ARankColor", "Aランクの表示色");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/BRankColor", "Bランクの表示色");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/RareAnimalColor", "レア動物の表示色");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/ShowNames", "ネームタグの表示");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/TextColor", "ネームタグの文字色");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/BgColor", "ネームタグの背景色");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LastSeen", "直近で最後の発見");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/Never", "未発見");
            AddEntry("Content/DeepDungeon", "ディープダンジョン");
            AddEntry("Content/DeepDungeon/Enabled", "有効");
            AddEntry("Content/DeepDungeon/AccursedHoard", "埋もれた財宝");
            AddEntry("Content/DeepDungeon/EurekaOrthos", "オルト・エウレカ");
            AddEntry("Content/DeepDungeon/EurekaOrthos/Enabled", "有効");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies", "敵の描画");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/Enabled", "有効");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/ObjectColor", "敵の表示色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/DrawLine", "近くの敵に対して線を描画する");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/BgColor", "ネームタグの背景色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons", "塔の描画");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/Enabled", "有効");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/ObjectColor", "塔の表示色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/BgColor", "ネームタグの背景色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests", "宝箱と埋もれた財宝の描画");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/Enabled", "有効");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/GoldColor", "金の宝箱の表示色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/SilverColor", "銀の宝箱の表示色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/BronzeColor", "銅の宝箱の表示色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/BandedColor", "木の宝箱の表示色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/HoardColor", "埋もれた財宝の表示色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/BgColor", "ネームタグの背景色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh", "アメノミハシラ");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/Enabled", "有効");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies", "敵の描画");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/Enabled", "有効");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/ObjectColor", "敵の表示色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/DrawLine", "近くの敵に対して線を描画する");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/BgColor", "ネームタグの背景色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons", "塔の描画");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/Enabled", "有効");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/ObjectColor", "塔の表示色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/BgColor", "ネームタグの背景色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests", "宝箱と埋もれた財宝の描画");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/Enabled", "有効");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/GoldColor", "金の宝箱の表示色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/SilverColor", "銀の宝箱の表示色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/BronzeColor", "銅の宝箱の表示色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/BandedColor", "木の宝箱の表示色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/HoardColor", "埋もれた財宝の表示色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/BgColor", "ネームタグの背景色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead", "死者の宮殿");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/Enabled", "有効");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies", "敵の描画");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/Enabled", "有効");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/ObjectColor", "敵の表示色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/DrawLine", "近くの敵に対して線を描画する");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/BgColor", "ネームタグの背景色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons", "塔の描画");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/Enabled", "有効");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/ObjectColor", "Cairn highlight color");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/BgColor", "ネームタグの背景色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests", "宝箱と埋もれた財宝の描画");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/Enabled", "有効");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/GoldColor", "金の宝箱の表示色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/SilverColor", "銀の宝箱の表示色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/BronzeColor", "銅の宝箱の表示色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/BandedColor", "木の宝箱の表示色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/HoardColor", "埋もれた財宝の表示色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/BgColor", "ネームタグの背景色");
            AddEntry("Content/Raid", "レイド");
            AddEntry("Content/Raid/Enabled", "有効");
            AddEntry("Content/EndwalkerRaids", "暁月のフィナーレ (6.x)");
            AddEntry("Content/EndwalkerRaids/Enabled", "有効");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos", "万魔殿パンデモニウム零式：煉獄編 (6.2)");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/Enabled", "有効");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM", "(P7s)3層 魔印創成/魔印創成･極 オートマーカー");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Enabled", "有効");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs", "マーカー設定");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/ShareTarget", "頭割り対象");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Share1", "頭割り 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Share2", "頭割り 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Share3", "頭割り 3");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Spread1", "散開 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Spread2", "散開 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Spread3", "散開 3");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Spread4", "散開 4");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Prio", "優先度設定");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Test", "割り振りテスト");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios", "万魔殿パンデモニウム零式：天獄編 (6.4)");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/Enabled", "有効");
            AddEntry("Content/Trial", "討伐・討滅戦");
            AddEntry("Content/Trial/Enabled", "有効");
            AddEntry("Content/Ultimate", "絶レイド");
            AddEntry("Content/Ultimate/Enabled", "有効");
            AddEntry("Content/Ultimate/UltUcob", "絶バハムート討滅戦");
            AddEntry("Content/Ultimate/UltUcob/Enabled", "有効");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm", "(P2) チェインライトニングオートマーカー");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Enabled", "有効");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Signs/Lightning1", "ライトニング1");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Signs/Lightning2", "ライトニング2");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Test", "割り振りテスト");
            AddEntry("Content/Ultimate/UltWeaponsRefrain", "絶アルテマウェポン破壊作戦");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/Enabled", "有効");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM", "(P3) タイタンジェイルオートマーカー");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Signs/Gaol1", "ジェイル 1");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Signs/Gaol2", "ジェイル 2");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Signs/Gaol3", "ジェイル 3");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Test", "割り振りテスト");
            AddEntry("Content/Ultimate/UltDragonsongReprise", "絶竜詩戦争");
            AddEntry("Content/Ultimate/UltDragonsongReprise/Enabled", "有効");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM", "(P2) メテオオートマーカー");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/Meteor1", "メテオ 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/Meteor2", "メテオ 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/MeteorRole1", "メテオロール 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/MeteorRole2", "メテオロール 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/NonMeteor1", "メテオ無し 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/NonMeteor2", "メテオ無し 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/NonMeteor3", "メテオ無し 3");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/NonMeteor4", "メテオ無し 4");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Test", "割り振りテスト");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm", "(P5) チェインライトニングオートマーカー");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Enabled", "有効");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Signs/Lightning1", "ライトニング 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Signs/Lightning2", "ライトニング 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Test", "割り振りテスト");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM", "(P6) 邪念の炎オートマーカー");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Presets/LPDU", "LPDU");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Presets/ElementalDC", "Elemental DC");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Stack1_1", "頭割り 1 (デバフ有り)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Stack1_2", "頭割り 1 (デバフ無し)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Stack2_1", "頭割り 2 (デバフ有り)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Stack2_2", "頭割り 2 (デバフ無し)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Spread1", "散開 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Spread2", "散開 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Spread3", "散開 3");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Spread4", "散開 4");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Test", "割り振りテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol", "絶オメガ検証戦");
            AddEntry("Content/Ultimate/UltOmegaProtocol/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega", "(P1/P3) オメガモデルのサイズを小さくする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/ApplyP1", "P1 ビートルオメガに適用する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/SizeP1", "P1 ビートルオメガのサイズ:");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/ApplyP3", "P3ファイナルオメガに適用する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/SizeP3", "P3 ファイナルオメガのサイズ:");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether", "(P2/P5) グリッチ線の距離インジケーター");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/TetherOkColor", "安全圏内の色");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/TetherSafeColor", "安全な距離の色");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/TetherNokColor", "間違った距離の色");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/Test", "近くの戦闘対象にランダムで線を付与してテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM", "(P1) サークルプログラムオートマーカー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs/Tower1", "次の塔踏み 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs/Tower2", "次の塔踏み 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs/Tether1", "次の線取り 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs/Tether2", "次の線取り 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Test", "ランダムに割り当てテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM", "(P1) パントクラトルオートマーカー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs/Beam1", "次の頭割りビーム 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs/Beam2", "次の頭割りビーム 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs/Missile1", "次のミサイル 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs/Missile2", "次のミサイル 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Test", "ランダムに割り当てテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM", "(P2) 連携プログラムPT オートマーカー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs", "ファーの際の並び順設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/Presets/BPOG - GPOB", "\xE04C\xE04B\xE04A\xE04D-\xE04D\xE04B\xE04A\xE04C");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/Presets/BPOG - GOPB", "\xE04C\xE04B\xE04A\xE04D-\xE04D\xE04A\xE04B\xE04C");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/CrossL", "クロス(左)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/CrossR", "クロス (右)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/SquareL", "四角 (左)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/SquareR", "四角 (右)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/CircleL", "まる (左)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/CircleR", "まる (右)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/TriangleL", "三角 (左)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/TriangleR", "三角 (右)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2", "ミドルの際の並び順設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/Presets/BPOG - BPOG", "\xE04C\xE04B\xE04A\xE04D-\xE04C\xE04B\xE04A\xE04D");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/CrossL", "クロス(左)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/CrossR", "クロス (右)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/SquareL", "四角 (左)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/SquareR", "四角 (右)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/CircleL", "まる (左)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/CircleR", "まる (右)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/TriangleL", "三角 (左)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/TriangleR", "三角 (右)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Test", "ランダムに割り当てテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM", "(P3) フェーズ移行オートマーカー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Stack1_1", "頭割り 1 (デバフ有り)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Stack1_2", "頭割り 1 (デバフ無し)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Stack2_1", "頭割り 2 (デバフ有り)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Stack2_2", "頭割り 2 (デバフ無し)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Spread1", "散開 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Spread2", "散開 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Spread3", "散開 3");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Spread4", "散開 4");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Test", "ランダムに割り当てテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM", "(P3) 検知オートマーカー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/Monitor1", "検知対象 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/Monitor2", "検知対象 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/Monitor3", "検知対象 3");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None1", "検知無し 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None2", "検知無し 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None3", "検知無し 3");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None4", "検知無し 4");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None5", "検知無し 5");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Test", "ランダムに割り当てテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/HelloWorldDrawBossMonitor", "(P3) ボス検知ハイライト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/HelloWorldDrawBossMonitor/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/HelloWorldDrawBossMonitor/HighlightColor", "表示色");
            AddEntry("Content/Ultimate/UltOmegaProtocol/HelloWorldDrawBossMonitor/Test", "オーバーレイのテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM", "(P5) コード：＊＊＊ミ＊【デルタ】オートマーカー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs/Presets/LPDU", "LPDU / Sausage");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs/Presets/ElementalDC", "Elemental DC");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs/DistantWorld", "ハローワールド:ファー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs/NearWorld", "ハローワールド:ニアー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Test", "ランダムに割り当てテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaDrawBossMonitor", "(P5) コード：＊＊＊ミ＊【デルタ】ボス検知ハイライト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaDrawBossMonitor/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaDrawBossMonitor/HighlightColor", "表示色");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaDrawBossMonitor/Test", "オーバーレイのテストy");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM", "(P5) コード：＊＊＊ミ＊【シグマ】オートマーカー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/Presets/LPDU", "LPDU / Sausage");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/Presets/ElementalDC", "Elemental DC");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/Arm1", "アーム誘導 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/Arm2", "アーム誘導 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/DistantWorld", "ハローワールド:ファー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/NearWorld", "ハローワールド:ニアー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/DistantFarBait", "遠くでファー誘導");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/DistantCloseBait", "近くでファー誘導");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/NearBait1", "ニアー誘導 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/NearBait2", "ニアー誘導 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Test", "ランダムに割り当てテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM", "(P5) コード：＊＊＊ミ＊【オメガ】オートマーカー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Presets/LPDU", "LPDU / Sausage");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Monitor1", "検知対象 / 線取り 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Monitor2", "検知対象 / 線取り 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/DistantWorld", "ハローワールド:ファー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/NearWorld", "ハローワールド:ニアー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Bait1", "誘導 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Bait2", "誘導 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Bait3", "誘導 3");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Bait4", "誘導 4");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Test", "ランダムに割り当てテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaDrawBossMonitor", "(P5) コード：＊＊＊ミ＊【オメガ】ボス検知ハイライト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaDrawBossMonitor/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaDrawBossMonitor/HighlightColor", "表示色");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaDrawBossMonitor/Test", "オーバーレイのテスト");
            #endregion
            #region RSV abilities
            //AddEntry("RSV/Ability_33127", "Front Combination");
            //AddEntry("RSV/Ability_33128", "Front Combination");
            //AddEntry("RSV/Ability_33129", "Rear Combination");
            //AddEntry("RSV/Ability_33130", "Rear Combination");
            //AddEntry("RSV/Ability_33211", "Chimeric Succession");
            //AddEntry("RSV/Ability_33254", "Jury Overruling");
            //AddEntry("RSV/Ability_33255", "Jury Overruling");
            //AddEntry("RSV/Ability_33256", "Jury Overruling");
            //AddEntry("RSV/Ability_33257", "Jury Overruling");
            //AddEntry("RSV/Ability_33260", "Divisive Overruling");
            //AddEntry("RSV/Ability_33261", "Divisive Overruling");
            //AddEntry("RSV/Ability_33262", "Divisive Overruling");
            //AddEntry("RSV/Ability_33266", "Upheld Overruling");
            //AddEntry("RSV/Ability_33267", "Upheld Overruling");
            //AddEntry("RSV/Ability_33293", "Arcane Revelation");
            //AddEntry("RSV/Ability_33294", "Arcane Revelation");
            //AddEntry("RSV/Ability_33295", "Arcane Revelation");
            //AddEntry("RSV/Ability_33296", "Arcane Revelation");
            //AddEntry("RSV/Ability_33297", "Twofold Revelation");
            //AddEntry("RSV/Ability_33298", "Twofold Revelation");
            //AddEntry("RSV/Ability_33407", "Steel Web");
            //AddEntry("RSV/Ability_33441", "Dæmoniac Bonds");
            //AddEntry("RSV/Ability_33442", "Dæmoniac Bonds");
            //AddEntry("RSV/Ability_33443", "Duodæmoniac Bonds");
            //AddEntry("RSV/Ability_33498", "Superchain Theory I");
            //AddEntry("RSV/Ability_33501", "Superchain Radiation");
            //AddEntry("RSV/Ability_33502", "Superchain Emission");
            //AddEntry("RSV/Ability_33521", "Searing Radiance");
            //AddEntry("RSV/Ability_33522", "Shadowsear");
            //AddEntry("RSV/Ability_33534", "Apodialogos");
            //AddEntry("RSV/Ability_33535", "Peridialogos");
            //AddEntry("RSV/Ability_33536", "Apodialogos");
            //AddEntry("RSV/Ability_33537", "Peridialogos");
            //AddEntry("RSV/Ability_33542", "Theos's Holy");
            //AddEntry("RSV/Ability_33543", "Polarized Ray");
            //AddEntry("RSV/Ability_33544", "Umbral Impact");
            //AddEntry("RSV/Ability_33545", "Astral Impact");
            //AddEntry("RSV/Ability_33546", "Theos's Cross");
            //AddEntry("RSV/Ability_33547", "Theos's Saltire");
            //AddEntry("RSV/Ability_33548", "Umbral Glow");
            //AddEntry("RSV/Ability_33549", "Astral Glow");
            //AddEntry("RSV/Ability_33550", "Umbral Advance");
            //AddEntry("RSV/Ability_33551", "Astral Advance");
            //AddEntry("RSV/Ability_33552", "Unmitigated Explosion");
            //AddEntry("RSV/Ability_33553", "Unmitigated Explosion");
            //AddEntry("RSV/Ability_33554", "Shock");
            //AddEntry("RSV/Ability_33555", "Electrify");
            //AddEntry("RSV/Ability_33559", "Crush Helm");
            //AddEntry("RSV/Ability_33560", "Crush Helm");
            //AddEntry("RSV/Ability_33561", "Crush Helm");
            //AddEntry("RSV/Ability_33562", "Palladian Grasp");
            //AddEntry("RSV/Ability_33563", "Palladian Grasp");
            //AddEntry("RSV/Ability_33564", "Palladian Grasp");
            //AddEntry("RSV/Ability_33565", "Palladian Grasp");
            //AddEntry("RSV/Ability_33566", "Ekpyrosis");
            //AddEntry("RSV/Ability_33567", "Ekpyrosis");
            //AddEntry("RSV/Ability_33568", "Ekpyrosis");
            //AddEntry("RSV/Ability_33569", "Ekpyrosis");
            //AddEntry("RSV/Ability_33570", "Ekpyrosis");
            //AddEntry("RSV/Ability_33571", "Palladian Ray");
            //AddEntry("RSV/Ability_33572", "Palladian Ray");
            //AddEntry("RSV/Ability_33573", "Palladian Ray");
            //AddEntry("RSV/Ability_33574", "Gaiaochos");
            //AddEntry("RSV/Ability_33575", "Demi Parhelion");
            //AddEntry("RSV/Ability_33576", "Demi Parhelion");
            //AddEntry("RSV/Ability_33577", "Geocentrism");
            //AddEntry("RSV/Ability_33578", "Geocentrism");
            //AddEntry("RSV/Ability_33579", "Geocentrism");
            //AddEntry("RSV/Ability_33580", "Demi Parhelion");
            //AddEntry("RSV/Ability_33581", "Demi Parhelion");
            //AddEntry("RSV/Ability_33582", "Divine Excoriation");
            //AddEntry("RSV/Ability_33583", "Summon Darkness");
            //AddEntry("RSV/Ability_33584", "Ultima Ray");
            //AddEntry("RSV/Ability_33585", "The Classical Concepts");
            //AddEntry("RSV/Ability_33586", "Fusion Burst");
            //AddEntry("RSV/Ability_33587", "Implode");
            //AddEntry("RSV/Ability_33588", "Aspect Effect");
            //AddEntry("RSV/Ability_33589", "Tilted Balance");
            //AddEntry("RSV/Ability_33590", "Panta Rhei");
            //AddEntry("RSV/Ability_33591", "Panta Rhei");
            //AddEntry("RSV/Ability_33592", "Caloric Theory");
            //AddEntry("RSV/Ability_33593", "Unmitigated Explosion");
            //AddEntry("RSV/Ability_33594", "Pyre Pulse");
            //AddEntry("RSV/Ability_33595", "Dynamic Atmosphere");
            //AddEntry("RSV/Ability_33596", "Entropic Excess");
            //AddEntry("RSV/Ability_33597", "Caloric Theory");
            //AddEntry("RSV/Ability_33598", "Caloric Theory");
            //AddEntry("RSV/Ability_33599", "Pangenesis");
            //AddEntry("RSV/Ability_33600", "Biochemical Factor");
            //AddEntry("RSV/Ability_33601", "Ex-factor");
            //AddEntry("RSV/Ability_33602", "Pantheos");
            //AddEntry("RSV/Ability_33603", "Umbral Advent");
            //AddEntry("RSV/Ability_33604", "Astral Advent");
            //AddEntry("RSV/Ability_33605", "Unmitigated Explosion");
            //AddEntry("RSV/Ability_33606", "Unmitigated Explosion");
            //AddEntry("RSV/Ability_33607", "Factor In");
            //AddEntry("RSV/Ability_33608", "Ultima Blow");
            //AddEntry("RSV/Ability_33609", "Ignorabimus");
            //AddEntry("RSV/Ability_33616", "Polarized Glow");
            //AddEntry("RSV/Ability_33620", "Demi Parhelion");
            //AddEntry("RSV/Ability_34134", "Theos's Ultima");
            //AddEntry("RSV/Ability_34182", "Missing Link");
            //AddEntry("RSV/Ability_34434", "Ultima");
            //AddEntry("RSV/Ability_34435", "Ekpyrosis");
            //AddEntry("RSV/Ability_34550", "Ultima");
            //AddEntry("RSV/Ability_34554", "Superchain Theory IIA");
            //AddEntry("RSV/Ability_34555", "Superchain Theory IIB");
            //AddEntry("RSV/Ability_34557", "Pyre Pulse");
            //AddEntry("RSV/Ability_34595", "Steel Web");
            //AddEntry("RSV/Ability_34596", "Pandæmoniac Web");
            //AddEntry("RSV/Ability_34692", "Dismissal Overruling");
            //AddEntry("RSV/Ability_34693", "Dismissal Overruling");
            //AddEntry("RSV/Ability_34694", "Dismissal Overruling");
            //AddEntry("RSV/Ability_34695", "Dismissal Overruling");
            //AddEntry("RSV/Ability_34702", "Front Firestrikes");
            //AddEntry("RSV/Ability_34703", "Rear Firestrikes");
            //AddEntry("RSV/Ability_34706", "Caloric Theory");
            //AddEntry("RSV/Ability_34719", "Gaiaochos");
            //AddEntry("RSV/Ability_34720", "Ultima");
            //AddEntry("RSV/Ability_34734", "Tetradæmoniac Bonds");
            //AddEntry("RSV/Ability_34735", "Pandæmoniac Turrets");
            //AddEntry("RSV/Ability_34739", "Divisive Overruling");
            //AddEntry("RSV/Ability_34740", "Divisive Overruling");
            //AddEntry("RSV/Ability_34741", "Divisive Overruling");
            //AddEntry("RSV/Ability_34771", "Upheld Overruling");
            //AddEntry("RSV/Ability_34772", "Upheld Overruling");
            #endregion
        }

    }

}
